From f8842ea0fddf95f53d20fa742cbcbc2c45648704 Mon Sep 17 00:00:00 2001
From: Solo <anqi.huang@outlook.com>
Date: Fri, 11 Jan 2019 18:08:04 +0800
Subject: [PATCH] login

Signed-off-by: Solo <anqi.huang@outlook.com>
---
 base/build.gradle                                  |  41 ++-
 base/res/drawable/bg_input_cursor.xml              |  23 ++
 base/res/drawable/bg_input_cursor_2.xml            |  21 ++
 base/res/drawable/selector_bg_edit.xml             |  46 +++
 base/res/drawable/selector_bg_edit_2.xml           |  46 +++
 base/res/drawable/shape_bt.xml                     |  25 ++
 base/res/drawable/shape_bt_2.xml                   |  23 ++
 base/res/drawable/state_list_animator_z.xml        |  28 ++
 {edge => base}/res/drawable/svg_add.xml            |   0
 {edge => base}/res/drawable/svg_ball.xml           |   0
 {edge => base}/res/drawable/svg_daemon.xml         |   0
 base/res/drawable/svg_email.xml                    |  25 ++
 base/res/drawable/svg_iphone_x.xml                 |  29 ++
 base/res/drawable/svg_login_add.xml                |  25 ++
 base/res/drawable/svg_login_back.xml               |  23 ++
 base/res/drawable/svg_login_clear.xml              |  25 ++
 {edge => base}/res/drawable/svg_notification.xml   |   0
 {edge => base}/res/drawable/svg_overflow.xml       |   0
 base/res/drawable/svg_phone.xml                    |  26 ++
 base/res/drawable/svg_version.xml                  |  25 ++
 base/res/drawable/timing_button.xml                |  30 ++
 base/res/layout/item_option.xml                    |  54 +++
 base/res/mipmap-xxhdpi/user.jpeg                   | Bin 0 -> 8449 bytes
 base/res/values/button_styles.xml                  |  27 ++
 base/res/values/colors.xml                         |  35 +-
 base/res/values/dimens.xml                         |  21 ++
 base/res/values/strings.xml                        |  38 ++
 base/res/values/styles.xml                         |  63 +++-
 base/src/com/journeyOS/base/Constant.java          |  12 +
 .../src/com/journeyOS/base/menu/DrawerAdapter.java | 133 +++++++
 base/src/com/journeyOS/base/menu/DrawerItem.java   |  42 +++
 base/src/com/journeyOS/base/menu/SimpleItem.java   |  92 +++++
 base/src/com/journeyOS/base/menu/SpaceItem.java    |  58 +++
 base/src/com/journeyOS/base/utils/BaseUtils.java   |  35 ++
 base/src/com/journeyOS/base/utils/PhoneUtil.java   |  43 +++
 .../src/com/journeyOS/base/widget/SettingText.java |   3 +
 .../com/journeyOS/base/widget/TimingButton.java    |  84 +++++
 build.gradle                                       |   1 +
 core/AndroidManifest.xml                           |  18 +
 core/assets/user.jpeg                              | Bin 0 -> 8449 bytes
 core/build.gradle                                  |  27 +-
 core/res/drawable/svg_menu_about.xml               |  26 ++
 core/res/drawable/svg_menu_permission.xml          |  32 ++
 core/res/drawable/svg_menu_settings.xml            |  30 ++
 core/res/drawable/svg_menu_user.xml                |  26 ++
 core/src/com/journeyOS/core/AccountManager.java    |  97 +++++
 core/src/com/journeyOS/core/CoreManager.java       |   1 +
 .../src/com/journeyOS/core/StatusDataResource.java |  70 ++++
 core/src/com/journeyOS/core/SyncManager.java       | 164 +++++++++
 core/src/com/journeyOS/core/Version.java           |  48 +++
 core/src/com/journeyOS/core/api/edge/IEdge.java    |   3 +
 .../core/api/edgeprovider/IUserProvider.java       |  53 +++
 .../com/journeyOS/core/api/plugins/IPlugins.java   |  22 ++
 core/src/com/journeyOS/core/base/BaseActivity.java |   6 +-
 core/src/com/journeyOS/core/base/BaseFragment.java |   6 +-
 core/src/com/journeyOS/core/base/BaseViewInit.java |   2 +-
 core/src/com/journeyOS/core/config/AppConfig.java  |   6 +
 .../src/com/journeyOS/core/database/DBConfigs.java |  17 +-
 core/src/com/journeyOS/core/database/DBHelper.java |   9 +-
 .../com/journeyOS/core/database/EdgeDatabase.java  |   6 +-
 .../com/journeyOS/core/database/edge/EdgeAir.java  |  28 ++
 .../core/database/edge/EdgeRepositoryImpl.java     |   5 +
 .../com/journeyOS/core/database/user/EdgeUser.java |  91 +++++
 .../src/com/journeyOS/core/database/user/User.java |  66 ++++
 .../com/journeyOS/core/database/user/UserDao.java  |  53 +++
 .../core/database/user/UserRepositoryImpl.java     |  73 ++++
 edge/AndroidManifest.xml                           |  11 +-
 edge/res/layout/activity_edge.xml                  |  43 +++
 edge/res/layout/menu_left_drawer.xml               |  75 ++++
 edge/res/layout/tab_view.xml                       |  25 ++
 edge/res/values/arrays.xml                         |  31 ++
 edge/res/values/strings.xml                        |   7 -
 edge/src/com/journeyOS/edge/Dispatcher.java        |   1 +
 edge/src/com/journeyOS/edge/SlidingDrawer.java     | 153 ++++++++
 edge/src/com/journeyOS/edge/provider/EdgeImpl.java |   6 +
 .../com/journeyOS/edge/ui/SettingsActivity.java    | 113 ------
 .../journeyOS/edge/ui/activity/EdgeActivity.java   | 128 +++++++
 .../journeyOS/edge/ui/adapter/MainPageAdapter.java |  90 +++++
 edge/src/com/journeyOS/edge/wm/EdgeManager.java    |  17 +-
 plugins/res/layout/fragment_about.xml              |  46 +++
 plugins/res/layout/fragment_login.xml              | 391 +++++++++++++++++++++
 plugins/res/layout/fragment_permission.xml         |  35 ++
 .../res/layout/fragment_settings.xml               |  28 +-
 .../com/journeyOS/plugins/SelectorActivity.java    |   7 +-
 .../com/journeyOS/plugins/about/AboutFragment.java |  70 ++++
 .../plugins/permission/PermissionFragment.java     |  71 ++++
 .../journeyOS/plugins/provider/PluginsImpl.java    |  26 ++
 .../journeyOS/plugins/search/SearchActivity.java   |   7 +-
 .../plugins/settings/SettingsFragment.java         |  86 +++++
 .../com/journeyOS/plugins/user/LoginFragment.java  | 282 +++++++++++++++
 .../src/com/journeyOS/plugins/user/LoginModel.java |  58 +++
 settings.gradle                                    |  10 +-
 92 files changed, 3806 insertions(+), 198 deletions(-)
 create mode 100644 base/res/drawable/bg_input_cursor.xml
 create mode 100644 base/res/drawable/bg_input_cursor_2.xml
 create mode 100644 base/res/drawable/selector_bg_edit.xml
 create mode 100644 base/res/drawable/selector_bg_edit_2.xml
 create mode 100644 base/res/drawable/shape_bt.xml
 create mode 100644 base/res/drawable/shape_bt_2.xml
 create mode 100644 base/res/drawable/state_list_animator_z.xml
 rename {edge => base}/res/drawable/svg_add.xml (100%)
 rename {edge => base}/res/drawable/svg_ball.xml (100%)
 rename {edge => base}/res/drawable/svg_daemon.xml (100%)
 create mode 100644 base/res/drawable/svg_email.xml
 create mode 100644 base/res/drawable/svg_iphone_x.xml
 create mode 100644 base/res/drawable/svg_login_add.xml
 create mode 100644 base/res/drawable/svg_login_back.xml
 create mode 100644 base/res/drawable/svg_login_clear.xml
 rename {edge => base}/res/drawable/svg_notification.xml (100%)
 rename {edge => base}/res/drawable/svg_overflow.xml (100%)
 create mode 100644 base/res/drawable/svg_phone.xml
 create mode 100644 base/res/drawable/svg_version.xml
 create mode 100644 base/res/drawable/timing_button.xml
 create mode 100644 base/res/layout/item_option.xml
 create mode 100644 base/res/mipmap-xxhdpi/user.jpeg
 create mode 100644 base/res/values/button_styles.xml
 create mode 100644 base/src/com/journeyOS/base/menu/DrawerAdapter.java
 create mode 100644 base/src/com/journeyOS/base/menu/DrawerItem.java
 create mode 100644 base/src/com/journeyOS/base/menu/SimpleItem.java
 create mode 100644 base/src/com/journeyOS/base/menu/SpaceItem.java
 create mode 100644 base/src/com/journeyOS/base/utils/PhoneUtil.java
 create mode 100644 base/src/com/journeyOS/base/widget/TimingButton.java
 create mode 100644 core/assets/user.jpeg
 create mode 100644 core/res/drawable/svg_menu_about.xml
 create mode 100644 core/res/drawable/svg_menu_permission.xml
 create mode 100644 core/res/drawable/svg_menu_settings.xml
 create mode 100644 core/res/drawable/svg_menu_user.xml
 create mode 100644 core/src/com/journeyOS/core/AccountManager.java
 create mode 100644 core/src/com/journeyOS/core/StatusDataResource.java
 create mode 100644 core/src/com/journeyOS/core/SyncManager.java
 create mode 100644 core/src/com/journeyOS/core/Version.java
 create mode 100644 core/src/com/journeyOS/core/api/edgeprovider/IUserProvider.java
 create mode 100644 core/src/com/journeyOS/core/database/edge/EdgeAir.java
 create mode 100644 core/src/com/journeyOS/core/database/user/EdgeUser.java
 create mode 100644 core/src/com/journeyOS/core/database/user/User.java
 create mode 100644 core/src/com/journeyOS/core/database/user/UserDao.java
 create mode 100644 core/src/com/journeyOS/core/database/user/UserRepositoryImpl.java
 create mode 100644 edge/res/layout/activity_edge.xml
 create mode 100644 edge/res/layout/menu_left_drawer.xml
 create mode 100644 edge/res/layout/tab_view.xml
 create mode 100644 edge/res/values/arrays.xml
 create mode 100644 edge/src/com/journeyOS/edge/SlidingDrawer.java
 delete mode 100644 edge/src/com/journeyOS/edge/ui/SettingsActivity.java
 create mode 100644 edge/src/com/journeyOS/edge/ui/activity/EdgeActivity.java
 create mode 100644 edge/src/com/journeyOS/edge/ui/adapter/MainPageAdapter.java
 create mode 100644 plugins/res/layout/fragment_about.xml
 create mode 100644 plugins/res/layout/fragment_login.xml
 create mode 100644 plugins/res/layout/fragment_permission.xml
 rename edge/res/layout/activity_settings.xml => plugins/res/layout/fragment_settings.xml (65%)
 create mode 100644 plugins/src/com/journeyOS/plugins/about/AboutFragment.java
 create mode 100644 plugins/src/com/journeyOS/plugins/permission/PermissionFragment.java
 create mode 100644 plugins/src/com/journeyOS/plugins/settings/SettingsFragment.java
 create mode 100644 plugins/src/com/journeyOS/plugins/user/LoginFragment.java
 create mode 100644 plugins/src/com/journeyOS/plugins/user/LoginModel.java

diff --git a/base/build.gradle b/base/build.gradle
index ce5793e..2a37117 100644
--- a/base/build.gradle
+++ b/base/build.gradle
@@ -23,13 +23,38 @@ android {
         }
     }
 
+    signingConfigs {
+        release {
+            File strFile = new File("../keystore/liteedge.keystore")
+            storeFile file(strFile)
+            keyAlias 'journeyOS'
+            keyPassword 'liteedge'
+            storePassword 'qazwsxedc'
+        }
+        debug {
+            File strFile = new File("../keystore/liteedge.keystore")
+            storeFile file(strFile)
+            keyAlias 'journeyOS'
+            keyPassword 'liteedge'
+            storePassword 'qazwsxedc'
+        }
+    }
+
     buildTypes {
         release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+            signingConfig signingConfigs.release
+//            minifyEnabled false
+//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+        debug {
+            signingConfig signingConfigs.debug
+//            minifyEnabled false
+//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
 
+    useLibrary 'org.apache.http.legacy'
+
 }
 
 dependencies {
@@ -62,4 +87,16 @@ dependencies {
     api "com.google.code.gson:gson:$gradle.gson"
 
     api "com.github.samlss:PowerView:$gradle.power_view"
+    api "com.yarolegovich:sliding-root-nav:$gradle.slidingrootnav"
+
+    api "cn.bmob.android:bmob-sdk:$gradle.bmob_sdk"
+    api "io.reactivex.rxjava2:rxjava:$gradle.rxjava"
+    api "io.reactivex.rxjava2:rxandroid:$gradle.rxandroid"
+    api "com.squareup.okio:okio:$gradle.okio"
+
+    api "com.android.support:cardview-v7:$gradle.cardview"
+
+    implementation ('com.github.ozodrukh:CircularReveal:2.0.1@aar') {
+        transitive = true;
+    }
 }
diff --git a/base/res/drawable/bg_input_cursor.xml b/base/res/drawable/bg_input_cursor.xml
new file mode 100644
index 0000000..323e50a
--- /dev/null
+++ b/base/res/drawable/bg_input_cursor.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <size android:width="1dp"
+        />
+    <solid android:color="#2fa881"/>
+</shape>
\ No newline at end of file
diff --git a/base/res/drawable/bg_input_cursor_2.xml b/base/res/drawable/bg_input_cursor_2.xml
new file mode 100644
index 0000000..c892ef8
--- /dev/null
+++ b/base/res/drawable/bg_input_cursor_2.xml
@@ -0,0 +1,21 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <size android:width="1dp" />
+    <solid android:color="#FFCC00" />
+</shape>
\ No newline at end of file
diff --git a/base/res/drawable/selector_bg_edit.xml b/base/res/drawable/selector_bg_edit.xml
new file mode 100644
index 0000000..08b5175
--- /dev/null
+++ b/base/res/drawable/selector_bg_edit.xml
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_focused="true">
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="1dp" android:color="#2fa881" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+    <item android:state_pressed="true">
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="1dp" android:color="#2fa881" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+    <item>
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="0.5dp" android:color="#c5c5c5" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+</selector>
\ No newline at end of file
diff --git a/base/res/drawable/selector_bg_edit_2.xml b/base/res/drawable/selector_bg_edit_2.xml
new file mode 100644
index 0000000..bf0ddc8
--- /dev/null
+++ b/base/res/drawable/selector_bg_edit_2.xml
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <item android:state_focused="true">
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="1dp" android:color="#FFCC00" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+    <item android:state_pressed="true">
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="1dp" android:color="#FFCC00" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+    <item>
+        <layer-list>
+            <item android:bottom="1dp" android:left="-2dp" android:right="-2dp" android:top="-2dp">
+                <shape android:shape="rectangle">
+                    <stroke android:width="0.5dp" android:color="#f0f7f4" />
+                </shape>
+            </item>
+        </layer-list>
+    </item>
+</selector>
\ No newline at end of file
diff --git a/base/res/drawable/shape_bt.xml b/base/res/drawable/shape_bt.xml
new file mode 100644
index 0000000..1c6314b
--- /dev/null
+++ b/base/res/drawable/shape_bt.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <corners android:radius="3dp" />
+
+    <stroke
+        android:width="1dp"
+        android:color="#d1d1d1" />
+
+</shape>
\ No newline at end of file
diff --git a/base/res/drawable/shape_bt_2.xml b/base/res/drawable/shape_bt_2.xml
new file mode 100644
index 0000000..0471690
--- /dev/null
+++ b/base/res/drawable/shape_bt_2.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android">
+
+    <corners android:radius="3dp" />
+
+    <solid android:color="#ffffff" />
+
+</shape>
\ No newline at end of file
diff --git a/base/res/drawable/state_list_animator_z.xml b/base/res/drawable/state_list_animator_z.xml
new file mode 100644
index 0000000..f45cd22
--- /dev/null
+++ b/base/res/drawable/state_list_animator_z.xml
@@ -0,0 +1,28 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_pressed="true">
+        <set>
+            <objectAnimator android:duration="@android:integer/config_shortAnimTime" android:propertyName="rotationX" android:valueTo="180" android:valueType="floatType" />
+        </set>
+    </item>
+    <item android:state_pressed="false">
+        <set>
+            <objectAnimator android:duration="@android:integer/config_shortAnimTime" android:propertyName="rotationX" android:valueTo="0" android:valueType="floatType" />
+        </set>
+    </item>
+</selector>
\ No newline at end of file
diff --git a/edge/res/drawable/svg_add.xml b/base/res/drawable/svg_add.xml
similarity index 100%
rename from edge/res/drawable/svg_add.xml
rename to base/res/drawable/svg_add.xml
diff --git a/edge/res/drawable/svg_ball.xml b/base/res/drawable/svg_ball.xml
similarity index 100%
rename from edge/res/drawable/svg_ball.xml
rename to base/res/drawable/svg_ball.xml
diff --git a/edge/res/drawable/svg_daemon.xml b/base/res/drawable/svg_daemon.xml
similarity index 100%
rename from edge/res/drawable/svg_daemon.xml
rename to base/res/drawable/svg_daemon.xml
diff --git a/base/res/drawable/svg_email.xml b/base/res/drawable/svg_email.xml
new file mode 100644
index 0000000..b0dbd7d
--- /dev/null
+++ b/base/res/drawable/svg_email.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?><!-- Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M149.6,171.8h691.9c47.2,0 85.9,37.7 86.5,83.9L495.7,493 63.5,256c0.4,-46.4 38.8,-84.2 86.1,-84.2zM63.5,346.8l-0.4,419.6c0,46.7 38.9,84.9 86.5,84.9h691.9c47.6,0 86.5,-38.2 86.5,-84.9L928,346.6L505.9,572.8c-6.5,3.5 -14.3,3.5 -20.7,0l-421.7,-226z" />
+</vector>
diff --git a/base/res/drawable/svg_iphone_x.xml b/base/res/drawable/svg_iphone_x.xml
new file mode 100644
index 0000000..3061ea7
--- /dev/null
+++ b/base/res/drawable/svg_iphone_x.xml
@@ -0,0 +1,29 @@
+<!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="#00DDF4"
+        android:pathData="M201.25,942.93V81.07a81.07,81.07 0,0 1,81.07 -81.07h459.37a81.07,81.07 0,0 1,81.07 81.07v875.38a67.56,67.56 0,0 1,-67.56 67.56H282.31a81.07,81.07 0,0 1,-81.07 -81.07" />
+    <path
+        android:fillColor="#2169F9"
+        android:pathData="M623.2,54.04H400.8a54.04,54.04 0,0 1,-45.26 -24.59L336.36,0h351.29l-19.19,29.45A54.04,54.04 0,0 1,623.2 54.04M613.33,986.3h-202.67a6.76,6.76 0,0 1,0 -13.51h202.67a6.76,6.76 0,0 1,0 13.51" />
+</vector>
diff --git a/base/res/drawable/svg_login_add.xml b/base/res/drawable/svg_login_add.xml
new file mode 100644
index 0000000..c43d228
--- /dev/null
+++ b/base/res/drawable/svg_login_add.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M19,13h-6v6h-2v-6H5v-2h6V5h2v6h6v2z" />
+</vector>
diff --git a/base/res/drawable/svg_login_back.xml b/base/res/drawable/svg_login_back.xml
new file mode 100644
index 0000000..853dc75
--- /dev/null
+++ b/base/res/drawable/svg_login_back.xml
@@ -0,0 +1,23 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<shape xmlns:android="http://schemas.android.com/apk/res/android"
+    android:shape="rectangle">
+    <solid android:color="@android:color/transparent" />
+    <stroke
+        android:width="2dp"
+        android:color="@color/white" />
+</shape>
\ No newline at end of file
diff --git a/base/res/drawable/svg_login_clear.xml b/base/res/drawable/svg_login_clear.xml
new file mode 100644
index 0000000..6d0d5c8
--- /dev/null
+++ b/base/res/drawable/svg_login_clear.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:viewportWidth="24.0"
+    android:viewportHeight="24.0">
+    <path
+        android:fillColor="#ffffff"
+        android:pathData="M19,6.41L17.59,5 12,10.59 6.41,5 5,6.41 10.59,12 5,17.59 6.41,19 12,13.41 17.59,19 19,17.59 13.41,12z" />
+</vector>
diff --git a/edge/res/drawable/svg_notification.xml b/base/res/drawable/svg_notification.xml
similarity index 100%
rename from edge/res/drawable/svg_notification.xml
rename to base/res/drawable/svg_notification.xml
diff --git a/edge/res/drawable/svg_overflow.xml b/base/res/drawable/svg_overflow.xml
similarity index 100%
rename from edge/res/drawable/svg_overflow.xml
rename to base/res/drawable/svg_overflow.xml
diff --git a/base/res/drawable/svg_phone.xml b/base/res/drawable/svg_phone.xml
new file mode 100644
index 0000000..4d762e6
--- /dev/null
+++ b/base/res/drawable/svg_phone.xml
@@ -0,0 +1,26 @@
+<!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M664.9,959.8c35.8,0 65.5,-29.3 65.5,-65.3v-765c0,-35.8 -29.3,-65.3 -65.3,-65.3L358.9,64.2c-36,0 -65.3,29.3 -65.3,65.3v765.1c0,36 29.7,65.3 65.5,65.3h305.8zM568.8,92.6c4.6,0 8.3,3.7 8.3,8.3 0,4.6 -3.7,8.3 -8.3,8.3 -4.6,0 -8.3,-3.7 -8.3,-8.3 0,-4.6 3.7,-8.3 8.3,-8.3zM474.4,100.6c0,-0.9 0.2,-3.9 4.2,-3.9h59.9c3.9,0 4.2,3.1 4.2,3.9v0.7c0,0.9 -0.2,3.9 -4.2,3.9h-59.9c-3.9,0 -4.2,-3.1 -4.2,-3.9v-0.7zM598.9,129.7c15.9,0 21,-9.6 22.3,-18.1 0.2,-1.3 0,-17 0,-17.7 0.7,-5.5 6.3,-7.4 9.6,-7.9h38.4c21.6,0 39.3,17.7 39.3,39.3v773.4c0,21.6 -17.7,39.3 -39.3,39.3L354.7,938c-21.6,0 -39.3,-17.7 -39.3,-39.3L315.4,125.3c0,-21.6 17.7,-39.3 39.3,-39.3h38.4c3.3,0.4 9,2.4 9.6,7.9 0,0.4 -0.2,16.4 0,17.7 1.5,8.5 6.6,18.1 22.3,18.1h173.9z" />
+</vector>
diff --git a/base/res/drawable/svg_version.xml b/base/res/drawable/svg_version.xml
new file mode 100644
index 0000000..08a70b8
--- /dev/null
+++ b/base/res/drawable/svg_version.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?><!-- Copyright (c) 2019 anqi.huang@outlook.com
+
+     Licensed under the Apache License, Version 2.0 (the "License");
+     you may not use this file except in compliance with the License.
+     You may obtain a copy of the License at
+
+          http://www.apache.org/licenses/LICENSE-2.0
+
+     Unless required by applicable law or agreed to in writing, software
+     distributed under the License is distributed on an "AS IS" BASIS,
+     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+     See the License for the specific language governing permissions and
+     limitations under the License.
+-->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M914.89,0 L109.11,0c-21.5,0 -38.91,14.08 -38.91,31.74L70.2,990.86c0,25.34 34.81,40.44 60.66,26.11l350.68,-194.28c13.05,-7.17 29.95,-7.42 43,-0.26l368.85,196.33c25.85,13.82 60.15,-1.28 60.15,-26.62L953.55,31.74C953.8,14.33 936.4,0 914.89,0zM562.68,746.66l-101.36,0 -196.33,-547.77 90.61,0 155.89,454.34 2.3,0 155.12,-454.34 90.61,0L562.68,746.66z" />
+</vector>
diff --git a/base/res/drawable/timing_button.xml b/base/res/drawable/timing_button.xml
new file mode 100644
index 0000000..0a9d585
--- /dev/null
+++ b/base/res/drawable/timing_button.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<selector xmlns:android="http://schemas.android.com/apk/res/android">
+    <item android:state_enabled="true">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/icon" />
+            <corners android:radius="6dp" />
+        </shape>
+    </item>
+    <item android:state_enabled="false">
+        <shape android:shape="rectangle">
+            <solid android:color="@color/gray_cc" />
+            <corners android:radius="6dp" />
+        </shape>
+    </item>
+</selector>
\ No newline at end of file
diff --git a/base/res/layout/item_option.xml b/base/res/layout/item_option.xml
new file mode 100644
index 0000000..91dd75c
--- /dev/null
+++ b/base/res/layout/item_option.xml
@@ -0,0 +1,54 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/menu_option"
+    android:layout_width="match_parent"
+    android:layout_height="wrap_content"
+    android:background="@color/dark_background"
+    android:orientation="vertical"
+    android:paddingLeft="@dimen/spacing_x_large">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:layout_marginTop="@dimen/spacing_normal"
+        android:layout_marginBottom="@dimen/spacing_normal">
+
+        <ImageView
+            android:id="@+id/icon"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignParentLeft="true"
+            android:layout_centerVertical="true"
+            android:src="@mipmap/user" />
+
+        <TextView
+            android:id="@+id/title"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="@dimen/spacing_large"
+            android:layout_marginRight="@dimen/spacing_large"
+            android:layout_toRightOf="@id/icon" />
+    </RelativeLayout>
+
+    <View
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/divider_size_secondary"
+        android:background="@color/divider" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/base/res/mipmap-xxhdpi/user.jpeg b/base/res/mipmap-xxhdpi/user.jpeg
new file mode 100644
index 0000000000000000000000000000000000000000..1ec533d119358503cfd7413fb2be138788b205a4
GIT binary patch
literal 8449
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
Awg3PC

literal 0
HcmV?d00001

diff --git a/base/res/values/button_styles.xml b/base/res/values/button_styles.xml
new file mode 100644
index 0000000..4bc84b7
--- /dev/null
+++ b/base/res/values/button_styles.xml
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+
+<resources>
+    <declare-styleable name="TimingButton">
+        <!--结束后的文字-->
+        <attr name="tb_psText" format="string" />
+        <!--计时总时长，毫秒-->
+        <attr name="tb_totalTime" format="integer" />
+        <!--计时时间间隔，毫秒-->
+        <attr name="tb_timeInterval" format="integer" />
+    </declare-styleable>
+</resources>
diff --git a/base/res/values/colors.xml b/base/res/values/colors.xml
index 6982eeb..6fefc0c 100644
--- a/base/res/values/colors.xml
+++ b/base/res/values/colors.xml
@@ -15,10 +15,26 @@
   -->
 
 <resources>
-    <color name="colorPrimary">#00BCD4</color>
-    <color name="colorPrimaryDark">#00BCD4</color>
+    <color name="colorPrimary">#87CEFA</color>
+    <color name="colorPrimaryDark">#87CEFA</color>
     <color name="colorAccent">#3FC1C9</color>
-    <color name="icon">#6DA5FF</color>
+
+    <color name="colorPrimary90">#E687CEFA</color>
+
+    <color name="main_background">#FFFFFF</color>
+    <color name="dark_background">#f5f5f5</color>
+    <color name="disable_or_hint_white">#4Cffffff</color>
+    <color name="icon">#00BFFF</color>
+    <color name="icon_unselected">#8C00BFFF</color>
+    <color name="icon_white">#FFFFFF</color>
+    <color name="text_primary">#a6ffffff</color>
+    <color name="text_secondary">#80ffffff</color>
+    <color name="text_primary_dark">#ff646464</color>
+    <color name="text_secondary_dark">#80646464</color>
+    <color name="divider">#30ffffff</color>
+    <color name="divider_secondary">#10ffffff</color>
+    <color name="divider_dark">#30646464</color>
+    <color name="divider_secondary_dark">#10646464</color>
 
     <color name="transparent">#00000000</color><!--透明色 -->
     <color name="white">#FFFFFF</color><!--白色 -->
@@ -165,17 +181,4 @@
     <color name="gray_8f">#8f8f8f</color><!--灰色8f -->
     <color name="ics_blue">#6DA5FF</color>
 
-    <color name="main_background">#FFFFFF</color>
-    <color name="dark_background">#f5f5f5</color>
-    <color name="disable_or_hint_white">#4Cffffff</color>
-    <color name="icon_unselected">#87CEFA</color>
-    <color name="icon_white">#FFFFFF</color>
-    <color name="text_primary">#ffffffff</color>
-    <color name="text_primary2">#a6ffffff</color>
-    <color name="text_secondary">#80ffffff</color>
-    <color name="text_primary_dark">#ff646464</color>
-    <color name="text_secondary_dark">#80646464</color>
-    <color name="divider">#30ffffff</color>
-    <color name="divider_secondary">#10ffffff</color>
-
 </resources>
diff --git a/base/res/values/dimens.xml b/base/res/values/dimens.xml
index 9c0cfb0..700106d 100644
--- a/base/res/values/dimens.xml
+++ b/base/res/values/dimens.xml
@@ -52,4 +52,25 @@
     <dimen name="divider_size">0.5dp</dimen>
     <dimen name="divider_size_secondary">0.5dp</dimen>
     <dimen name="toolbar_height">48dp</dimen>
+
+    <dimen name="spacing_micro">2dp</dimen>
+    <dimen name="spacing_mini">4dp</dimen>
+    <dimen name="spacing_small">8dp</dimen>
+    <dimen name="spacing_normal">12dp</dimen>
+    <dimen name="spacing_large">16dp</dimen>
+    <dimen name="spacing_x_large">24dp</dimen>
+    <dimen name="spacing_xx_large">32dp</dimen>
+    <dimen name="spacing_xxx_large">48dp</dimen>
+    <dimen name="spacing_huge">64dp</dimen>
+    <dimen name="spacing_x_huge">72dp</dimen>
+    <dimen name="spacing_xx_huge">88dp</dimen>
+    <dimen name="spacing_xxx_huge">96dp</dimen>
+    <dimen name="spacing_xxxx_huge">120dp</dimen>
+
+    <dimen name="icon_size_micro">12dp</dimen>
+    <dimen name="icon_size_small">16dp</dimen>
+    <dimen name="icon_size">24dp</dimen>
+    <dimen name="icon_size_big">36dp</dimen>
+    <dimen name="icon_size_x_large">48dp</dimen>
+    <dimen name="icon_size_xx_large">56dp</dimen>
 </resources>
\ No newline at end of file
diff --git a/base/res/values/strings.xml b/base/res/values/strings.xml
index 2d3e9f6..2de8396 100644
--- a/base/res/values/strings.xml
+++ b/base/res/values/strings.xml
@@ -15,4 +15,42 @@
   -->
 
 <resources>
+    <string name="app_name">Edge</string>
+    <string name="daemon">守护进程</string>
+    <string name="overflow">浮窗权限</string>
+    <string name="ball">悬浮球</string>
+    <string name="has_permission">已经获得</string>
+    <string name="add">添加</string>
+    <string name="weather_air_alty">空气质量：</string>
+
+    <string name="menu_account">账号</string>
+    <string name="menu_permission">权限</string>
+    <string name="menu_settings">设置</string>
+    <string name="menu_about">关于</string>
+    <string name="version">版本</string>
+    <string name="email">邮箱</string>
+    <string name="open_in_market">在应用市场中打开</string>
+    <string name="no_market_clients">未安装应用市场客户端</string>
+    <string name="send_email">发送邮件</string>
+    <string name="no_email_clients">未安装邮件客户端</string>
+
+    <string name="login_success">登录成功</string>
+    <string name="login">登录</string>
+    <string name="login_username">用户</string>
+    <string name="login_password">密码</string>
+    <string name="regiter_phone">手机号</string>
+    <string name="regiter_code">验证码</string>
+    <string name="forgot_your_password">忘记密码</string>
+    <string name="login_go">登录</string>
+    <string name="repeat_password">重复密码</string>
+    <string name="next">注册</string>
+    <string name="register">注册</string>
+    <string name="get_sms_code">获取验证码</string>
+    <string name="reget_sms_code">重新获取</string>
+    <string name="millis">秒</string>
+    <string name="auto_sync">自动同步</string>
+    <string name="userid">用户ID</string>
+    <string name="userphone">电话</string>
+    <string name="useremail">邮箱</string>
+    <string name="not_set">未设置</string>
 </resources>
\ No newline at end of file
diff --git a/base/res/values/styles.xml b/base/res/values/styles.xml
index c4cefce..c72c25a 100644
--- a/base/res/values/styles.xml
+++ b/base/res/values/styles.xml
@@ -18,12 +18,49 @@
     <style name="OnePixelTheme" parent="android:Theme.Holo.Light.NoActionBar">
         <item name="android:windowIsTranslucent">true</item>
     </style>
+    <!-- Base application theme. -->
+    <style name="base_AppTheme" parent="Theme.AppCompat.Light.NoActionBar">
+        <!-- Customize your theme here. -->
+        <item name="colorPrimary">@color/colorPrimary</item>
+        <item name="colorPrimaryDark">@color/colorPrimaryDark</item>
+        <item name="colorAccent">@color/colorAccent</item>
+        <item name="toolbarNavigationButtonStyle">@style/base_ToolbarNavigationButtonStyle</item>
+        <item name="android:itemBackground">@color/white</item>
+    </style>
+
+    <style name="base_BaseAppTheme" parent="base_AppTheme">
+        <item name="android:textColor">@color/text_primary</item>
+        <item name="android:windowFullscreen">false</item>
+        <item name="android:windowBackground">@null</item>
+    </style>
+
+    <style name="base_ToolbarNavigationButtonStyle" parent="@style/Widget.AppCompat.Toolbar.Button.Navigation">
+        <item name="android:width">24dp</item>
+        <item name="android:height">24dp</item>
+        <item name="android:scaleType">centerInside</item>
+    </style>
+
+    <style name="base_DividerLineHorizontal" parent="base_DividerLine">
+        <item name="android:layout_height">@dimen/divider_size</item>
+        <item name="android:layout_width">match_parent</item>
+    </style>
+
+    <style name="base_DividerLineVertical" parent="base_DividerLine">
+        <item name="android:layout_width">@dimen/divider_size</item>
+        <item name="android:layout_height">match_parent</item>
+    </style>
+
+    <style name="base_DividerLine">
+        <item name="android:background">@color/divider</item>
+    </style>
+
     <!-- toolbar菜单样式 -->
     <style name="ToolbarTheme" parent="@style/ThemeOverlay.AppCompat.ActionBar">
-        <!-- <item name="contentInsetStart">0dp</item> --> <!-- 设置该属性边距为0dp-->
+        <item name="colorControlNormal">@android:color/white</item>
+        <item name="titleTextColor">@android:color/white</item>
         <item name="actionMenuTextColor">@android:color/white</item>
         <item name="actionMenuTextAppearance">@style/ToolbarMenuTextSize</item>
-        <item name="selectableItemBackground">@drawable/toolbar_button_bg</item>
+        <item name="android:background">?attr/colorPrimary</item>
     </style>
     <!-- toolbar弹出菜单样式 -->
     <style name="ToolbarPopupTheme" parent="@style/ThemeOverlay.AppCompat">
@@ -37,4 +74,26 @@
     <style name="ToolbarMenuTextSize" parent="@style/TextAppearance.AppCompat.Menu">
         <item name="android:textSize">10sp</item>
     </style>
+
+    <style name="CornersAlertDialog" parent="Theme.AppCompat.Light.Dialog.Alert">
+        <item name="android:windowFrame">@null</item>
+        <item name="android:windowIsFloating">true</item>
+        <item name="android:windowIsTranslucent">true</item>
+        <item name="android:windowNoTitle">true</item>
+        <item name="android:backgroundDimAmount">0.5</item>
+        <item name="android:backgroundDimEnabled">true</item>
+        <!--<item name="android:colorBackground">@color/colorPrimary</item>-->
+        <!--<item name="android:textColor">@color/text_primary</item>-->
+        <item name="colorAccent">@color/deeppink</item>
+        <item name="textColorAlertDialogListItem">@color/text_primary_dark</item>
+        <item name="android:textColorPrimary">@color/text_primary_dark</item>
+        <!--item RadioButton or CheckBox color-->
+        <item name="colorControlNormal">@color/text_primary_dark</item>
+        <item name="colorControlActivated">@color/deeppink</item>
+        <item name="buttonStyle">@style/Widget.AppCompat.Button.Borderless </item>
+    </style>
+    <style name="TextLabel" parent="Theme.AppCompat.Light.NoActionBar">
+        <!-- Label color in TRUE state and bar color FALSE and TRUE State -->
+        <item name="colorControlActivated">#FFCC00</item>
+    </style>
 </resources>
diff --git a/base/src/com/journeyOS/base/Constant.java b/base/src/com/journeyOS/base/Constant.java
index 1d134e8..406bebf 100644
--- a/base/src/com/journeyOS/base/Constant.java
+++ b/base/src/com/journeyOS/base/Constant.java
@@ -32,5 +32,17 @@ public class Constant {
     public static final String DB_INITED = "dbInited";
     public static final String CITY_INITED = "cityInited";
     public static final String CITY_ID = "cityId";
+    public static final String AUTO_SYNC = "autoSync";
 
+    //menu key
+    public static final int MENU_USER = 0;
+    public static final int MENU_SETTINGS = 1;
+    public static final int MENU_PERMISSION = 2;
+    public static final int MENU_ABOUT = 3;
+
+
+    public static final String USER = "Solo";
+    public static final String EMAIL = "anqi.huang@outlook.com";
+
+    public static final String DEFAULT_PASSWORD = "123456";
 }
diff --git a/base/src/com/journeyOS/base/menu/DrawerAdapter.java b/base/src/com/journeyOS/base/menu/DrawerAdapter.java
new file mode 100644
index 0000000..3bc4b89
--- /dev/null
+++ b/base/src/com/journeyOS/base/menu/DrawerAdapter.java
@@ -0,0 +1,133 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.menu;
+
+import android.support.v7.widget.RecyclerView;
+import android.util.SparseArray;
+import android.view.View;
+import android.view.ViewGroup;
+
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+public class DrawerAdapter extends RecyclerView.Adapter<DrawerAdapter.ViewHolder> {
+
+    private Map<Integer, View> views = new HashMap<>();
+    private List<DrawerItem> items;
+    private Map<Class<? extends DrawerItem>, Integer> viewTypes;
+    private SparseArray<DrawerItem> holderFactories;
+
+    private OnItemSelectedListener listener;
+
+    public DrawerAdapter(List<DrawerItem> items) {
+        this.items = items;
+        this.viewTypes = new HashMap<>();
+        this.holderFactories = new SparseArray<>();
+
+        processViewTypes();
+    }
+
+    @Override
+    public ViewHolder onCreateViewHolder(ViewGroup parent, int viewType) {
+        ViewHolder holder = holderFactories.get(viewType).createViewHolder(parent);
+        holder.adapter = this;
+        return holder;
+    }
+
+    @Override
+    @SuppressWarnings("unchecked")
+    public void onBindViewHolder(ViewHolder holder, int position) {
+        items.get(position).bindViewHolder(holder);
+        views.put(position, holder.itemView);
+    }
+
+    @Override
+    public int getItemCount() {
+        return items.size();
+    }
+
+    @Override
+    public int getItemViewType(int position) {
+        return viewTypes.get(items.get(position).getClass());
+    }
+
+    private void processViewTypes() {
+        int type = 0;
+        for (DrawerItem item : items) {
+            if (!viewTypes.containsKey(item.getClass())) {
+                viewTypes.put(item.getClass(), type);
+                holderFactories.put(type, item);
+                type++;
+            }
+        }
+    }
+
+    public void setSelected(int position) {
+        DrawerItem newChecked = items.get(position);
+        if (!newChecked.isSelectable()) {
+            return;
+        }
+
+        for (int i = 0; i < items.size(); i++) {
+            DrawerItem item = items.get(i);
+            if (item.isChecked()) {
+                item.setChecked(false);
+                notifyItemChanged(i);
+                break;
+            }
+        }
+
+        newChecked.setChecked(true);
+        notifyItemChanged(position);
+        if (listener != null) {
+            listener.onItemSelected(position);
+        }
+    }
+
+    public View getView(int position) {
+        if (views != null) {
+            View view = (View) views.get(position);
+            return view;
+        }
+
+        return null;
+    }
+
+    public void setListener(OnItemSelectedListener listener) {
+        this.listener = listener;
+    }
+
+    static abstract class ViewHolder extends RecyclerView.ViewHolder implements View.OnClickListener {
+
+        private DrawerAdapter adapter;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+            itemView.setOnClickListener(this);
+        }
+
+        @Override
+        public void onClick(View v) {
+            adapter.setSelected(getAdapterPosition());
+        }
+    }
+
+    public interface OnItemSelectedListener {
+        void onItemSelected(int position);
+    }
+}
diff --git a/base/src/com/journeyOS/base/menu/DrawerItem.java b/base/src/com/journeyOS/base/menu/DrawerItem.java
new file mode 100644
index 0000000..8305ef0
--- /dev/null
+++ b/base/src/com/journeyOS/base/menu/DrawerItem.java
@@ -0,0 +1,42 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.menu;
+
+import android.view.ViewGroup;
+
+public abstract class DrawerItem<T extends DrawerAdapter.ViewHolder> {
+
+    protected boolean isChecked;
+
+    public abstract T createViewHolder(ViewGroup parent);
+
+    public abstract void bindViewHolder(T holder);
+
+    public DrawerItem setChecked(boolean isChecked) {
+        this.isChecked = isChecked;
+        return this;
+    }
+
+    public boolean isChecked() {
+        return isChecked;
+    }
+
+    public boolean isSelectable() {
+        return true;
+    }
+
+}
diff --git a/base/src/com/journeyOS/base/menu/SimpleItem.java b/base/src/com/journeyOS/base/menu/SimpleItem.java
new file mode 100644
index 0000000..93ee843
--- /dev/null
+++ b/base/src/com/journeyOS/base/menu/SimpleItem.java
@@ -0,0 +1,92 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.menu;
+
+import android.graphics.drawable.Drawable;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.ImageView;
+import android.widget.TextView;
+
+import com.journeyOS.base.R;
+import com.journeyOS.base.widget.SettingView;
+
+public class SimpleItem extends DrawerItem<SimpleItem.ViewHolder> {
+
+    private int selectedItemIconTint;
+    private int selectedItemTextTint;
+
+    private int normalItemIconTint;
+    private int normalItemTextTint;
+
+    private Drawable icon;
+    private String title;
+
+    public SimpleItem(Drawable icon, String title) {
+        this.icon = icon;
+        this.title = title;
+    }
+
+    @Override
+    public ViewHolder createViewHolder(ViewGroup parent) {
+        LayoutInflater inflater = LayoutInflater.from(parent.getContext());
+        View v = inflater.inflate(R.layout.item_option, parent, false);
+        return new ViewHolder(v);
+    }
+
+    @Override
+    public void bindViewHolder(ViewHolder holder) {
+        holder.title.setText(title);
+        holder.icon.setImageDrawable(icon);
+
+        holder.title.setTextColor(isChecked ? selectedItemTextTint : normalItemTextTint);
+        holder.icon.setColorFilter(isChecked ? selectedItemIconTint : normalItemIconTint);
+    }
+
+    public SimpleItem withSelectedIconTint(int selectedItemIconTint) {
+        this.selectedItemIconTint = selectedItemIconTint;
+        return this;
+    }
+
+    public SimpleItem withSelectedTextTint(int selectedItemTextTint) {
+        this.selectedItemTextTint = selectedItemTextTint;
+        return this;
+    }
+
+    public SimpleItem withIconTint(int normalItemIconTint) {
+        this.normalItemIconTint = normalItemIconTint;
+        return this;
+    }
+
+    public SimpleItem withTextTint(int normalItemTextTint) {
+        this.normalItemTextTint = normalItemTextTint;
+        return this;
+    }
+
+    static class ViewHolder extends DrawerAdapter.ViewHolder {
+
+        private ImageView icon;
+        private TextView title;
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+            icon = (ImageView) itemView.findViewById(R.id.icon);
+            title = (TextView) itemView.findViewById(R.id.title);
+        }
+    }
+}
diff --git a/base/src/com/journeyOS/base/menu/SpaceItem.java b/base/src/com/journeyOS/base/menu/SpaceItem.java
new file mode 100644
index 0000000..2037857
--- /dev/null
+++ b/base/src/com/journeyOS/base/menu/SpaceItem.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.menu;
+
+import android.content.Context;
+import android.view.View;
+import android.view.ViewGroup;
+
+public class SpaceItem extends DrawerItem<SpaceItem.ViewHolder> {
+
+    private int spaceDp;
+
+    public SpaceItem(int spaceDp) {
+        this.spaceDp = spaceDp;
+    }
+
+    @Override
+    public ViewHolder createViewHolder(ViewGroup parent) {
+        Context c = parent.getContext();
+        View view = new View(c);
+        int height = (int) (c.getResources().getDisplayMetrics().density * spaceDp);
+        view.setLayoutParams(new ViewGroup.LayoutParams(
+                ViewGroup.LayoutParams.MATCH_PARENT,
+                height));
+        return new ViewHolder(view);
+    }
+
+    @Override
+    public void bindViewHolder(ViewHolder holder) {
+
+    }
+
+    @Override
+    public boolean isSelectable() {
+        return false;
+    }
+
+    static class ViewHolder extends DrawerAdapter.ViewHolder {
+
+        public ViewHolder(View itemView) {
+            super(itemView);
+        }
+    }
+}
diff --git a/base/src/com/journeyOS/base/utils/BaseUtils.java b/base/src/com/journeyOS/base/utils/BaseUtils.java
index b740cf4..a5b2b38 100644
--- a/base/src/com/journeyOS/base/utils/BaseUtils.java
+++ b/base/src/com/journeyOS/base/utils/BaseUtils.java
@@ -16,9 +16,19 @@
 
 package com.journeyOS.base.utils;
 
+import android.content.ActivityNotFoundException;
+import android.content.Context;
+import android.content.Intent;
+import android.net.Uri;
+import android.support.annotation.NonNull;
+
+import com.journeyOS.base.R;
+
 import java.util.Collection;
 import java.util.Map;
 
+import es.dmoral.toasty.Toasty;
+
 public class BaseUtils {
 
     public static boolean isEmpty(CharSequence str) {
@@ -44,4 +54,29 @@ public class BaseUtils {
     public static boolean isNull(Object o) {
         return o == null;
     }
+
+    public static void openInMarket(@NonNull Context context) {
+        Uri uri = Uri.parse("market://details?id=" + context.getPackageName());
+        Intent intent = new Intent(Intent.ACTION_VIEW, uri);
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        try {
+            context.startActivity(Intent.createChooser(intent, context.getString(R.string.open_in_market))
+                    .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
+        } catch (ActivityNotFoundException e) {
+            Toasty.warning(context, context.getString(R.string.no_market_clients)).show();
+        }
+    }
+
+    public static void launchEmail(@NonNull Context context, @NonNull String email) {
+        Intent intent = new Intent(Intent.ACTION_SEND);
+        intent.setType("message/rfc822");
+        intent.putExtra(Intent.EXTRA_EMAIL, new String[]{email});
+        intent.addFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
+        try {
+            context.startActivity(Intent.createChooser(intent, context.getString(R.string.send_email))
+                    .addFlags(Intent.FLAG_ACTIVITY_NEW_TASK));
+        } catch (ActivityNotFoundException e) {
+            Toasty.warning(context, context.getString(R.string.no_email_clients)).show();
+        }
+    }
 }
diff --git a/base/src/com/journeyOS/base/utils/PhoneUtil.java b/base/src/com/journeyOS/base/utils/PhoneUtil.java
new file mode 100644
index 0000000..d5f0757
--- /dev/null
+++ b/base/src/com/journeyOS/base/utils/PhoneUtil.java
@@ -0,0 +1,43 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.utils;
+
+public class PhoneUtil {
+//    /*  2019年1月已知
+//     * 中国电信号段 133,149,153,173,174,177,180,181,189,199
+//     * 中国联通号段 130,131,132,145,146,155,156,166,175,176,185,186
+//     * 中国移动号段 134(0-8),135,136,137,138,139,147,148,150,151,152,157,158,159,178,182,183,184,187,188,198
+//     * 上网卡专属号段（用于上网和收发短信，不打打电话）,如中国联通的是145
+//        虚拟运营商
+//        电信：1700,1701,1702
+//        移动：1703,1705,1706
+//        联通：1704,1707,1708,1709,171
+//     * 卫星通信： 1349
+//     * 未知号段：141、142、143、144、154
+//     */
+
+    private static final String PHONE_NUMBER_REG = "^(13[0-9]|14[579]|15[0-3,5-9]|16[6]|17[0135678]|18[0-9]|19[89])\\d{8}$";
+
+    public static boolean isMobile(String str) {
+        if (!BaseUtils.isNull(str)) {
+            return str.matches(PHONE_NUMBER_REG);
+        }
+        return false;
+    }
+
+
+}
diff --git a/base/src/com/journeyOS/base/widget/SettingText.java b/base/src/com/journeyOS/base/widget/SettingText.java
index 70abdd3..77b56ea 100644
--- a/base/src/com/journeyOS/base/widget/SettingText.java
+++ b/base/src/com/journeyOS/base/widget/SettingText.java
@@ -23,6 +23,7 @@ import android.util.AttributeSet;
 import android.view.View;
 import android.view.ViewGroup;
 import android.widget.FrameLayout;
+import android.widget.ImageView;
 import android.widget.TextView;
 
 import com.journeyOS.base.R;
@@ -78,7 +79,9 @@ public class SettingText extends SettingView {
         mText = new TextView(getContext());
         FrameLayout.LayoutParams params = new FrameLayout.LayoutParams(ViewGroup.LayoutParams.WRAP_CONTENT,
                 ViewGroup.LayoutParams.WRAP_CONTENT);
+//        params.rightMargin = px2dp(12);
         mText.setLayoutParams(params);
+//        mText.setAlpha(0.8f);
         return mText;
     }
 
diff --git a/base/src/com/journeyOS/base/widget/TimingButton.java b/base/src/com/journeyOS/base/widget/TimingButton.java
new file mode 100644
index 0000000..a6ca8f5
--- /dev/null
+++ b/base/src/com/journeyOS/base/widget/TimingButton.java
@@ -0,0 +1,84 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.base.widget;
+
+import android.annotation.SuppressLint;
+import android.content.Context;
+import android.content.res.TypedArray;
+import android.os.CountDownTimer;
+import android.util.AttributeSet;
+import android.view.View;
+import android.widget.Button;
+
+import com.journeyOS.base.R;
+
+@SuppressLint("AppCompatCustomView")
+public class TimingButton extends Button {
+    private int total, interval;
+    private String psText;
+    TimeCount mTimeCount;
+
+    public TimingButton(Context context, AttributeSet attrs) {
+        super(context, attrs);
+        TypedArray typedArray = getContext().obtainStyledAttributes(attrs, R.styleable.TimingButton);
+        total = typedArray.getInteger(R.styleable.TimingButton_tb_totalTime, 60000);
+        interval = typedArray.getInteger(R.styleable.TimingButton_tb_timeInterval, 1000);
+        psText = typedArray.getString(R.styleable.TimingButton_tb_psText);
+        setBackgroundResource(R.drawable.timing_button); //设置默认样式
+        typedArray.recycle();
+    }
+
+    public void start() {
+        mTimeCount = new TimeCount(total, interval);
+        mTimeCount.start();
+    }
+
+    @Override
+    protected void onVisibilityChanged(View changedView, int visibility) {
+        super.onVisibilityChanged(changedView, visibility);
+        if (View.GONE == visibility && mTimeCount != null) {
+            mTimeCount.onFinish();
+            try {
+                finalize();
+            } catch (Throwable throwable) {
+                throwable.printStackTrace();
+            }
+        }
+    }
+
+    public class TimeCount extends CountDownTimer {
+        private long countDownInterval;
+
+        public TimeCount(long millisInFuture, long countDownInterval) {
+            super(millisInFuture, countDownInterval);//参数依次为总时长,和计时的时间间隔
+            this.countDownInterval = countDownInterval;
+        }
+
+        @Override
+        public void onFinish() {//计时完毕时触发
+            setText(psText);
+            setEnabled(true);
+        }
+
+        @SuppressLint("SetTextI18n")
+        @Override
+        public void onTick(long millisUntilFinished) {//计时过程显示
+            setEnabled(false);
+            setText(millisUntilFinished / countDownInterval + getContext().getResources().getString(R.string.millis));
+        }
+    }
+}
\ No newline at end of file
diff --git a/build.gradle b/build.gradle
index 6c96362..2fa2803 100644
--- a/build.gradle
+++ b/build.gradle
@@ -18,6 +18,7 @@ allprojects {
         google()
         jcenter()
         maven { url 'https://jitpack.io' }
+        maven { url "https://raw.github.com/bmob/bmob-android-sdk/master" }
     }
 }
 
diff --git a/core/AndroidManifest.xml b/core/AndroidManifest.xml
index 4b85cf7..ccb57ec 100644
--- a/core/AndroidManifest.xml
+++ b/core/AndroidManifest.xml
@@ -11,6 +11,19 @@
     <uses-permission android:name="android.permission.BLUETOOTH"></uses-permission>
     <uses-permission android:name="android.permission.BLUETOOTH_ADMIN"></uses-permission>
 
+    <!--允许联网 -->
+    <uses-permission android:name="android.permission.INTERNET" />
+    <!--获取GSM（2g）、WCDMA（联通3g）等网络状态的信息  -->
+    <uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />
+    <!--获取wifi网络状态的信息 -->
+    <uses-permission android:name="android.permission.ACCESS_WIFI_STATE" />
+    <!--保持CPU 运转，屏幕和键盘灯有可能是关闭的,用于文件上传和下载 -->
+    <uses-permission android:name="android.permission.WAKE_LOCK" />
+    <!--获取sd卡写的权限，用于文件上传和下载-->
+    <uses-permission android:name="android.permission.WRITE_EXTERNAL_STORAGE" />
+    <!--允许读取手机状态 用于创建BmobInstallation-->
+    <uses-permission android:name="android.permission.READ_PHONE_STATE" />
+
     <application
         android:allowBackup="true"
         android:supportsRtl="true">
@@ -29,6 +42,11 @@
             android:name="com.amap.api.v2.apikey"
             android:value="a9998e9f15d9d569d687efa838844a95" />
 
+        <provider
+            android:name="cn.bmob.v3.util.BmobContentProvider"
+            android:authorities="com.journeyOS.edge.BmobContentProvider">
+        </provider>
+
     </application>
 
 </manifest>
diff --git a/core/assets/user.jpeg b/core/assets/user.jpeg
new file mode 100644
index 0000000000000000000000000000000000000000..1ec533d119358503cfd7413fb2be138788b205a4
GIT binary patch
literal 8449
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
Awg3PC

literal 0
HcmV?d00001

diff --git a/core/build.gradle b/core/build.gradle
index badf9b7..a34c78d 100644
--- a/core/build.gradle
+++ b/core/build.gradle
@@ -26,10 +26,33 @@ android {
         }
     }
 
+    signingConfigs {
+        release {
+            File strFile = new File("../keystore/liteedge.keystore")
+            storeFile file(strFile)
+            keyAlias 'journeyOS'
+            keyPassword 'liteedge'
+            storePassword 'qazwsxedc'
+        }
+        debug {
+            File strFile = new File("../keystore/liteedge.keystore")
+            storeFile file(strFile)
+            keyAlias 'journeyOS'
+            keyPassword 'liteedge'
+            storePassword 'qazwsxedc'
+        }
+    }
+
     buildTypes {
         release {
-            minifyEnabled false
-            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+            signingConfig signingConfigs.release
+//            minifyEnabled false
+//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
+        }
+        debug {
+            signingConfig signingConfigs.debug
+//            minifyEnabled false
+//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
         }
     }
 
diff --git a/core/res/drawable/svg_menu_about.xml b/core/res/drawable/svg_menu_about.xml
new file mode 100644
index 0000000..5051028
--- /dev/null
+++ b/core/res/drawable/svg_menu_about.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M300.93,453.16c11.5,-2.59 18.74,-14.02 16.15,-25.53 -5.44,-24.16 -6.26,-48.98 -2.43,-73.71C331.33,245.86 432.8,171.54 540.95,188.29c25.5,3.94 49.54,12.59 71.42,25.7 10.16,6.07 23.24,2.77 29.3,-7.34 6.05,-10.13 2.75,-23.24 -7.36,-29.3 -26.66,-15.95 -55.88,-26.48 -86.84,-31.26 -131.27,-20.32 -254.74,69.98 -275.07,201.33 -4.62,30.06 -3.62,60.2 2.99,89.59 2.23,9.95 11.05,16.69 20.82,16.69 1.57,-0.01 3.14,-0.2 4.72,-0.53zM895.38,612.43c0,-30.54 -11.99,-57.46 -32.14,-76.09 20.22,-46.71 31.58,-98.08 31.58,-152.1C894.82,172.37 722.46,0 510.61,0 298.75,0 126.38,172.37 126.38,384.24c0,126.89 61.98,239.39 157.13,309.4a106.69,106.69 0,0 0,2.64 11.4c3.62,12.37 8.62,23.45 14.94,33.05 34.45,52.54 73.5,112.04 112.24,170.06 39.24,58.74 96.04,95.27 168.8,108.56 9.16,1.61 17.54,2.71 25.63,3.74 3.89,0.52 7.78,1.03 11.64,1.58 3.05,0.45 6.14,0.65 9.22,0.65h43.39c3.41,0 6.83,-0.23 10.21,-0.82 3.82,-0.62 7.63,-1.21 11.49,-1.8a2627.42,2627.42 0,0 0,19.7 -3.15c91.92,-15.87 161.29,-85 176.84,-176.22 3.18,-18.23 4.83,-36.71 4.9,-54.77 0.22,-68.46 0.22,-77.04 0.2,-104.73 0,-14.2 0,-33.52 0.02,-68.75zM190.45,384.23c0,-176.85 143.35,-320.17 320.16,-320.17s320.16,143.32 320.16,320.17c0,44.88 -9.4,87.5 -26.09,126.26 -3,-0.29 -5.99,-0.49 -9,-0.49a99.29,99.29 0,0 0,-26.95 3.71c-9.98,-9.44 -21.92,-16.83 -35.32,-21.43 -2.23,-0.73 -4.45,-1.37 -6.65,-1.96 10.54,-21.32 18.18,-44.51 21.98,-69.26 8.26,-53.24 -1.15,-106.25 -27.18,-153.33 -5.7,-10.31 -18.69,-14.07 -29.02,-8.36 -10.31,5.71 -14.05,18.7 -8.35,29.02 21.41,38.71 29.14,82.34 22.35,126.13 -4.3,27.64 -14.22,52.92 -28.34,75.1 -1.27,0.3 -2.6,0.43 -3.85,0.78 -8.78,-8.07 -19.31,-14.72 -31.37,-19.78 -9.2,-4.9 -19.5,-7.45 -29.99,-7.45h-2.16c0,-27.51 0,-53.6 -0.03,-74.53 0,-52.01 -34.53,-92.43 -85.95,-100.51a92.3,92.3 0,0 0,-14.37 -1.15c-50.27,0 -94.47,40.42 -98.51,90.09 -0.48,6.38 -0.48,11.74 -0.48,16.05v162.58c-19.94,-11.45 -37.93,-26.28 -52.95,-44.22 -7.55,-9.04 -21,-10.25 -30.08,-2.68 -9.03,7.57 -10.23,21.04 -2.68,30.1 10.42,12.44 22.1,23.59 34.63,33.57 -25.95,6.62 -48.7,23.19 -62.88,46.41 -0.55,0.9 -0.97,1.84 -1.49,2.75 -64.79,-58.6 -105.57,-143.19 -105.57,-237.41zM831.09,785.7c-0.07,14.72 -1.46,29.65 -3.99,44.21 -10.98,64.43 -59.79,112.68 -124.43,123.82 -10.16,1.72 -20.44,3.24 -30.65,4.9h-43.4c-11.63,-1.72 -23.37,-2.94 -34.97,-5 -53.34,-9.73 -96.64,-35.58 -127.02,-81.08 -37.67,-56.37 -74.81,-112.96 -111.96,-169.6 -3.14,-4.78 -5.38,-10.33 -7.01,-15.82 -6.95,-23.93 7.16,-48.66 30.71,-53.22 3.42,-0.64 6.74,-0.99 9.89,-0.99 14.31,0 26.51,6.47 35.85,18.57 15.57,20.13 30.29,40.92 45.36,61.42a369.92,369.92 0,0 0,4.84 6.52c0.39,-0.17 0.82,-0.3 1.22,-0.49v-5.75,-320.07c0,-3.64 0,-7.24 0.28,-10.87 1.38,-16.89 17.86,-31.19 34.66,-31.19 1.45,0 2.96,0.12 4.43,0.36 19.88,3.13 31.84,16.94 31.84,37.27 0.05,56.97 0,152.32 0.08,209.34 0,2.96 0.19,6.06 1.06,8.86 1.46,4.61 4.94,7.08 9.88,7.46h1.05c4.72,0 8.2,-2.36 10.06,-6.59 1.19,-2.62 1.26,-5.83 1.26,-8.82 0,-19.61 -0.05,-25.79 -0.05,-25.79l-0.07,18.23c0,-0.06 0,-6.3 0.05,-25.8 0,-12.88 4.32,-24.08 15.27,-31.69 4.03,-2.75 8.83,-4.47 13.26,-6.64h14.39c0.51,0.37 0.92,0.84 1.47,1.04 18.72,6.44 27.42,18.58 27.42,38.26 -0.06,19.31 -0.06,25.46 -0.06,25.46l-0.02,-18.79v25.49c0,1.84 -0.06,3.62 0.13,5.4 0.78,6.15 5.51,10.23 11.48,10.23 0.39,0 0.74,0 1.12,-0.02 6.31,-0.57 9.92,-4.88 10.36,-12.68v-0.19c0.03,-0.47 0.03,-0.96 0.03,-1.43v-12.12c0.28,-8.39 2.34,-16.3 7.74,-23.13 7.09,-8.99 17.41,-13.88 28.18,-13.88 3.91,0 7.88,0.65 11.73,1.95 14.79,5.1 24.25,19.45 24.25,36.59 -0.02,19.31 -0.05,25.48 -0.05,25.48 -0.01,0 -0.05,-18.81 -0.07,-18.81 0,0 -0.01,6.15 -0.01,25.5 0,2.2 0,4.43 0.23,6.61 0.71,5.8 4.47,8.8 9.86,9.86a7.59,7.59 0,0 0,1.68 0.16c4.26,0 8.79,-2.97 10.23,-7.24 0.92,-2.77 1.18,-5.86 1.18,-8.86 0,-2.62 0,-4.88 0.01,-6.77v12.98c0.07,0 0.11,-3.89 0.15,-15.16 0.07,-6.25 1.2,-12.92 3.67,-18.63 5.64,-12.79 18.6,-20.52 31.96,-20.52 2.47,0 4.9,0.29 7.36,0.82 17.32,3.79 28.26,18.49 28.26,37.52 -0.06,103.54 0.1,69.78 -0.22,173.33z" />
+</vector>
\ No newline at end of file
diff --git a/core/res/drawable/svg_menu_permission.xml b/core/res/drawable/svg_menu_permission.xml
new file mode 100644
index 0000000..818187c
--- /dev/null
+++ b/core/res/drawable/svg_menu_permission.xml
@@ -0,0 +1,32 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M531.5,374.6l2.8,-2.8c28.1,-53.2 28.1,-112 0,-165.2 -28.1,-50.4 -84.1,-81.3 -142.9,-81.3 -28.1,0 -56.1,8.5 -81.3,22.4 -42.1,22.4 -70,58.9 -81.3,103.8 -11.2,42.1 -2.8,84.1 19.6,120.4l2.8,5.6h-70v-2.8c-22.4,-58.9 -22.4,-117.6 0,-170.9 36.6,-84 117.8,-140 210.2,-140 28.1,0 58.9,5.6 86.8,16.8C534.3,103 579.1,145.1 601.5,201c25.3,56.1 25.3,117.6 0,173.7v2.8h-70v-2.9z" />
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M702,959c-9.6,-5.4 -18.8,-11.4 -27.7,-17.7 -25,-17.7 -51.1,-40.1 -73.2,-63.3 -25.3,-26.3 -45.9,-53.7 -59.9,-79.3 -13.9,-25.5 -21.2,-49.5 -21.2,-69.6v-210l16.4,5.3c16.7,5.4 33,8.1 48.5,8.1 25.8,0 51.4,-4.5 75.2,-13.1 -3,-30.3 -26.7,-52.3 -52.9,-52.3 -28.1,0 -53.2,28.1 -53.2,58.9v-30.7c0,-33.6 -25.3,-58.9 -53.2,-58.9 -28.1,0 -53.2,28.1 -53.2,58.9V301.9c0,-33.6 -25.3,-58.9 -53.2,-58.9 -28.1,0 -50.4,28.1 -50.4,58.9v341.7c0,16.8 -11.2,30.8 -28.1,30.8h-8.5l-75.7,-33.6c-8.5,-5.6 -16.8,-2.8 -25.3,-5.6 -28.1,-8.5 -53.2,28.1 -53.2,58.9 0,19.6 22.4,44.9 33.6,56.1l204.5,210.1h313.5c-1.1,-0.3 -1.9,-0.8 -2.8,-1.3z" />
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M716,651.6c-14.5,0 -26.4,11.1 -26.4,24.7S701.4,701 716,701s26.5,-11.1 26.5,-24.7c-0.1,-13.6 -11.9,-24.7 -26.5,-24.7zM826.6,573.5c-40.9,0 -79.6,-12.4 -110.6,-33.9 -31,21.5 -69.7,33.9 -110.6,33.9 -14.2,0 -29,-2.5 -44.1,-7.3v162.7c0,15.1 5.8,33.6 16.6,53.6 11.3,20.8 28.2,43.1 48.8,64.6 18.4,19.2 39.7,37.6 60.2,52.1 7.2,5.2 14.8,9.9 22.4,14.3 2.9,1.7 6.5,1.6 9.5,-0.1 7.8,-4.6 15.3,-9.6 22.7,-14.9 22.1,-15.8 42.7,-33.5 61.8,-52.9 21.4,-21.8 38.8,-44.2 50.5,-64.7 11.2,-19.6 17,-37.7 17,-52.2L870.8,566.1c-15.2,5 -29.9,7.4 -44.2,7.4zM732.7,742.2v71c-0.1,8.6 -7.7,15.6 -16.9,15.5 -9,-0.1 -16.4,-6.9 -16.5,-15.5v-71c-31.8,-7 -55.6,-33.9 -55.6,-65.9 0,-37.3 32.5,-67.7 72.3,-67.7 39.9,0 72.3,30.3 72.3,67.7 0,31.9 -23.8,58.8 -55.6,65.9z" />
+</vector>
diff --git a/core/res/drawable/svg_menu_settings.xml b/core/res/drawable/svg_menu_settings.xml
new file mode 100644
index 0000000..60c8183
--- /dev/null
+++ b/core/res/drawable/svg_menu_settings.xml
@@ -0,0 +1,30 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportHeight="1024"
+    android:viewportWidth="1024">
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M504.61,302.89c-124.07,0 -225.02,100.98 -225.02,225.1s100.94,225.09 225.02,225.09 225.01,-100.98 225.01,-225.09 -100.93,-225.1 -225.01,-225.1zM504.61,713.97c-102.51,0 -185.92,-83.44 -185.92,-186s83.41,-186 185.92,-186c102.51,0 185.92,83.45 185.92,186s-83.39,186 -185.92,186z" />
+    <path
+        android:fillColor="@color/icon"
+        android:pathData="M959.17,411.72c-22.21,-2.02 -67.9,-14.9 -77.97,-36.86 -7.39,-16.06 2.85,-45.57 28.07,-80.96l22.43,-31.51 -151.31,-159.39 -33.45,25.05c-13.87,10.4 -50.8,31.87 -76.51,31.87 -4.55,0 -8.34,-0.71 -11.25,-2.09 -13.23,-6.29 -22.13,-34.83 -23.78,-76.29l-1.76,-45.11h-240.93l-1.77,45.1c-1.65,41.48 -10.54,70.01 -23.77,76.32 -2.91,1.38 -6.69,2.09 -11.22,2.09 -25.72,0 -62.67,-21.48 -76.54,-31.88l-33.48,-25.09 -151.28,159.43 22.43,31.51c25.2,35.35 35.44,64.84 28.11,80.91 -9.59,21.01 -52.28,34.46 -78.03,36.93l-42.69,3.89v218.99l42.61,3.88c25.83,2.47 68.53,15.92 78.11,36.93 7.33,16.07 -2.91,45.56 -28.11,80.92l-22.42,31.51 151.28,159.43 33.47,-25.11c13.87,-10.39 50.82,-31.87 76.54,-31.87 4.53,0 8.31,0.7 11.21,2.08 10.23,4.88 21.84,27.48 23.78,76.32l1.76,45.1h240.95l1.77,-45.1c1.65,-41.49 10.54,-70.03 23.76,-76.32 2.92,-1.39 6.72,-2.09 11.25,-2.09 25.7,0 62.64,21.48 76.51,31.87l33.45,25.07 151.29,-159.4 -22.42,-31.52c-25.23,-35.39 -35.46,-64.89 -28.08,-80.96 10.08,-21.95 55.76,-34.84 77.99,-36.86l42.69,-3.89v-218.99l-42.69,-3.88zM962.78,598.92l-7.14,0.65c-0.86,0.08 -86.56,8.44 -109.98,59.49 -13.97,30.42 -3.28,70.78 31.77,119.94l3.76,5.28 -105.18,110.81 -5.6,-4.19c-18.31,-13.72 -62.76,-39.68 -99.97,-39.68 -10.39,0 -19.81,1.97 -28.04,5.87 -28.18,13.42 -43.66,50.45 -46.04,110.09l-0.29,7.54h-165.75l-0.29,-7.55c-2.38,-59.63 -17.87,-96.65 -46.05,-110.07 -8.19,-3.9 -17.63,-5.87 -28.02,-5.87 -46.56,0 -99.48,39.29 -100,39.69l-5.61,4.2 -105.16,-110.84 3.76,-5.27c34.99,-49.1 45.7,-89.42 31.83,-119.82 -23.17,-50.76 -106.43,-59.28 -110.05,-59.63l-7.14,-0.65 0.01,-147.59 7.24,-0.65c3.54,-0.34 86.79,-8.86 109.96,-59.63 13.87,-30.41 3.15,-70.72 -31.84,-119.82l-3.76,-5.28 105.16,-110.82 5.61,4.2c0.53,0.4 53.45,39.69 100,39.69 10.4,0 19.83,-1.98 28.03,-5.89 28.17,-13.41 43.66,-50.45 46.04,-110.07l0.29,-7.54h165.76l0.29,7.55c2.38,59.63 17.87,96.65 46.07,110.07 8.21,3.89 17.63,5.87 28.03,5.87 37.22,0 81.66,-25.97 99.96,-39.68l5.6,-4.19 105.18,110.81 -3.76,5.27c-35.05,49.18 -45.72,89.55 -31.76,119.94 23.43,51.09 109.12,59.42 109.96,59.5l7.15,0.65 -0.04,147.59z" />
+</vector>
\ No newline at end of file
diff --git a/core/res/drawable/svg_menu_user.xml b/core/res/drawable/svg_menu_user.xml
new file mode 100644
index 0000000..e8820a3
--- /dev/null
+++ b/core/res/drawable/svg_menu_user.xml
@@ -0,0 +1,26 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<vector xmlns:android="http://schemas.android.com/apk/res/android"
+    android:width="24dp"
+    android:height="24dp"
+    android:autoMirrored="true"
+    android:viewportWidth="1024"
+    android:viewportHeight="1024">
+    <path
+        android:fillColor="@color/colorPrimary90"
+        android:pathData="M685.13,644.1C685.13,644.1 641.97,629.09 641.97,593.45L641.97,521.49C680.53,496.8 711.21,461.04 729.52,418.58 732.91,418.93 736.22,419.6 739.68,419.6 792.22,419.6 834.84,376.99 834.84,324.49 834.84,274.59 796.24,234.1 747.36,230.12 738.5,111.06 639.37,17.17 517.99,17.17 396.76,17.17 297.59,111.06 288.69,230.08 239.62,233.87 200.86,274.39 200.86,324.45 200.86,376.95 243.48,419.56 295.94,419.56 299.64,419.56 303.03,418.86 306.57,418.5 324.88,461.08 355.72,496.88 394.36,521.61L394.36,593.37C394.36,629.01 351.27,644.02 351.27,644.02 351.27,644.02 73.49,713.45 73.49,874.81 73.49,1045.58 473.05,1022.46 514.48,1019.55 556.62,1022.46 962.88,1045.62 962.88,874.81 962.8,713.53 685.13,644.1 685.13,644.1L685.13,644.1ZM429.06,394.59C390.46,394.59 359.15,363.32 359.15,324.69 359.15,286.09 390.46,254.82 429.06,254.82L607.27,254.82C645.87,254.82 677.18,286.09 677.18,324.69 677.18,363.28 645.87,394.59 607.27,394.59L429.06,394.59 429.06,394.59Z" />
+</vector>
\ No newline at end of file
diff --git a/core/src/com/journeyOS/core/AccountManager.java b/core/src/com/journeyOS/core/AccountManager.java
new file mode 100644
index 0000000..0c9e0da
--- /dev/null
+++ b/core/src/com/journeyOS/core/AccountManager.java
@@ -0,0 +1,97 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core;
+
+import android.os.Build;
+
+import com.journeyOS.base.utils.BaseUtils;
+import com.journeyOS.base.utils.LogUtils;
+import com.journeyOS.base.utils.Singleton;
+import com.journeyOS.core.api.edgeprovider.IUserProvider;
+import com.journeyOS.core.api.thread.ICoreExecutors;
+import com.journeyOS.core.database.user.EdgeUser;
+import com.journeyOS.core.database.user.User;
+
+import cn.bmob.v3.exception.BmobException;
+import cn.bmob.v3.listener.LogInListener;
+
+public class AccountManager {
+    private static final String TAG = AccountManager.class.getSimpleName();
+    private final static boolean DEBUG = "eng".equals(Build.TYPE) || "userdebug".equals(Build.TYPE);
+
+    private AccountManager() {
+    }
+
+    private static final Singleton<AccountManager> gDefault = new Singleton<AccountManager>() {
+        @Override
+        protected AccountManager create() {
+            return new AccountManager();
+        }
+    };
+
+    public static AccountManager getDefault() {
+        return gDefault.get();
+    }
+
+
+    public void login() {
+        CoreManager.getDefault().getImpl(ICoreExecutors.class).diskIOThread().execute(new Runnable() {
+            @Override
+            public void run() {
+                User user = CoreManager.getDefault().getImpl(IUserProvider.class).getCurrentAccount();
+                if (!BaseUtils.isNull(user)) {
+                    EdgeUser.loginByAccount(user.userId, user.token, new LogInListener<User>() {
+                        @Override
+                        public void done(User user, BmobException e) {
+                            if (e == null) {
+                                LogUtils.d(TAG, "login success");
+                            } else {
+                                LogUtils.d(TAG, "login error = " + e.getMessage());
+                            }
+                        }
+                    });
+                }
+            }
+        });
+    }
+
+    public void logOut() {
+        EdgeUser.logOut();
+    }
+
+    public boolean isLogin() {
+        return EdgeUser.isLogin();
+    }
+
+    //just for debug
+    public void save2Db(final String userId, final String password) {
+        if (!DEBUG) {
+            LogUtils.e(TAG, "can't save user password!!!");
+            return;
+        }
+        CoreManager.getDefault().getImpl(ICoreExecutors.class).diskIOThread().execute(new Runnable() {
+            @Override
+            public void run() {
+                User user = new User();
+                user.userId = userId;
+                user.userName = userId;
+                user.token = password;
+                CoreManager.getDefault().getImpl(IUserProvider.class).insertOrUpdateUser(user);
+            }
+        });
+    }
+}
diff --git a/core/src/com/journeyOS/core/CoreManager.java b/core/src/com/journeyOS/core/CoreManager.java
index 6cb4fe2..5227a66 100644
--- a/core/src/com/journeyOS/core/CoreManager.java
+++ b/core/src/com/journeyOS/core/CoreManager.java
@@ -48,6 +48,7 @@ public class CoreManager {
         sContext = context;
         I007Core.getCore().running(context);
         AppConfig.initialize(context);
+        AccountManager.getDefault().login();
     }
 
     public Application getContext() {
diff --git a/core/src/com/journeyOS/core/StatusDataResource.java b/core/src/com/journeyOS/core/StatusDataResource.java
new file mode 100644
index 0000000..a3bdd0f
--- /dev/null
+++ b/core/src/com/journeyOS/core/StatusDataResource.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core;
+
+import android.support.annotation.NonNull;
+import android.support.annotation.Nullable;
+
+public class StatusDataResource<T> {
+    public enum Status {
+        SUCCESS, ERROR, LOADING, CACHE_HIT
+    }
+
+    @NonNull
+    public final Status status;
+    @Nullable
+    public T data;
+    @Nullable
+    public T subData;
+    @Nullable
+    public final String message;
+
+    private StatusDataResource(@NonNull Status status, @Nullable T data, @Nullable T subData, @Nullable String message) {
+        this.status = status;
+        this.data = data;
+        this.subData = subData;
+        this.message = message;
+    }
+
+    public static <T> StatusDataResource<T> loading() {
+        return new StatusDataResource<>(Status.LOADING, null, null, null);
+    }
+
+    public static <T> StatusDataResource<T> success(@NonNull T data) {
+        return new StatusDataResource<>(Status.SUCCESS, data, null, null);
+    }
+
+    public static <T> StatusDataResource<T> success(@NonNull T data, @NonNull T subData) {
+        return new StatusDataResource<>(Status.SUCCESS, data, subData, null);
+    }
+
+    public static <T> StatusDataResource<T> error(String msg) {
+        return new StatusDataResource<>(Status.ERROR, null, null, msg);
+    }
+
+    public static <T> StatusDataResource<T> cacheHit(@NonNull T data) {
+        return new StatusDataResource<>(Status.CACHE_HIT, data, null, null);
+    }
+
+    public static <T> StatusDataResource<T> cacheHit(@NonNull T data, @NonNull T subData) {
+        return new StatusDataResource<>(Status.CACHE_HIT, data, subData, null);
+    }
+
+    public boolean isSucceed() {
+        return Status.SUCCESS.equals(status);
+    }
+}
diff --git a/core/src/com/journeyOS/core/SyncManager.java b/core/src/com/journeyOS/core/SyncManager.java
new file mode 100644
index 0000000..b0a4ee8
--- /dev/null
+++ b/core/src/com/journeyOS/core/SyncManager.java
@@ -0,0 +1,164 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.persistence.SpUtils;
+import com.journeyOS.base.utils.BaseUtils;
+import com.journeyOS.base.utils.JsonHelper;
+import com.journeyOS.base.utils.LogUtils;
+import com.journeyOS.base.utils.Singleton;
+import com.journeyOS.core.api.edgeprovider.IEdgeProvider;
+import com.journeyOS.core.api.thread.ICoreExecutors;
+import com.journeyOS.core.database.edge.Edge;
+import com.journeyOS.core.database.edge.EdgeAir;
+import com.journeyOS.core.database.entity.EdgeBean;
+import com.journeyOS.core.database.user.EdgeUser;
+import com.journeyOS.core.type.EdgeDirection;
+
+import java.util.ArrayList;
+import java.util.List;
+
+import cn.bmob.v3.BmobQuery;
+import cn.bmob.v3.BmobUser;
+import cn.bmob.v3.exception.BmobException;
+import cn.bmob.v3.listener.FindListener;
+import cn.bmob.v3.listener.SaveListener;
+import cn.bmob.v3.listener.UpdateListener;
+
+public class SyncManager {
+    private static final String TAG = SyncManager.class.getSimpleName();
+    private static final String OBJECT_ID = "objectId";
+    private static final String AUTHOR = "author";
+
+    private SyncManager() {
+    }
+
+    private static final Singleton<SyncManager> gDefault = new Singleton<SyncManager>() {
+        @Override
+        protected SyncManager create() {
+            return new SyncManager();
+        }
+    };
+
+    public static SyncManager getDefault() {
+        return gDefault.get();
+    }
+
+    public void sync() {
+        if (BmobUser.isLogin()
+                && SpUtils.getInstant().getBoolean(Constant.AUTO_SYNC, true)) {
+            EdgeBean bean = new EdgeBean();
+            List<EdgeBean.Edge> edges = new ArrayList<>();
+
+            List<Edge> configs = CoreManager.getDefault().getImpl(IEdgeProvider.class).getConfigs();
+            LogUtils.d(TAG, "configs size = " + configs.size());
+            for (Edge config : configs) {
+                String packageName = config.packageName;
+                EdgeBean.Edge edge = new EdgeBean.Edge();
+                edge.postion = CoreManager.getDefault().getImpl(IEdgeProvider.class).getPostion(config.item);
+                edge.direction = config.direction;
+                edge.packageName = packageName;
+                edges.add(edge);
+                if (Constant.DEBUG) {
+                    LogUtils.d(TAG, "sync " + edge.direction + " edge, postion = " + edge.postion + " , packageName = " + packageName);
+                }
+            }
+            bean.edge = edges;
+
+            EdgeAir edgeAir = new EdgeAir();
+            EdgeUser edgeUser = BmobUser.getCurrentUser(EdgeUser.class);
+            edgeAir.author = edgeUser;
+            edgeAir.config = JsonHelper.toJson(bean);
+            if (Constant.DEBUG) LogUtils.d(TAG, "sync config = " + edgeAir.config);
+
+            String objectId = SpUtils.getInstant().getString(OBJECT_ID, null);
+            if (!BaseUtils.isNull(objectId)) {
+                edgeAir.update(new UpdateListener() {
+                    @Override
+                    public void done(BmobException e) {
+                        LogUtils.d(TAG, "sync done(update), e = " + e);
+                    }
+                });
+            } else {
+                edgeAir.save(new SaveListener<String>() {
+                    @Override
+                    public void done(String s, BmobException e) {
+                        LogUtils.d(TAG, "sync done(save), result = " + s + " e = " + e);
+                        if (BaseUtils.isNull(e)) {
+                            SpUtils.getInstant().put(OBJECT_ID, s);
+                        }
+                    }
+                });
+            }
+        }
+    }
+
+    public void fetchEdgeAir() {
+        if (BmobUser.isLogin()
+                && SpUtils.getInstant().getBoolean(Constant.AUTO_SYNC, true)) {
+            EdgeUser edgeUser = BmobUser.getCurrentUser(EdgeUser.class);
+            BmobQuery<EdgeAir> edgeAirQuery = new BmobQuery<>();
+            edgeAirQuery.addWhereEqualTo(AUTHOR, edgeUser);
+            edgeAirQuery.findObjects(new FindListener<EdgeAir>() {
+                @Override
+                public void done(final List<EdgeAir> list, final BmobException e) {
+                    LogUtils.d(TAG, "fetch edge air list = [" + list + "], e = [" + e + "]");
+                    CoreManager.getDefault().getImpl(ICoreExecutors.class).diskIOThread().execute(new Runnable() {
+                        @Override
+                        public void run() {
+                            if (BaseUtils.isNull(e)) {
+                                if (!BaseUtils.isNull(list)) {
+                                    EdgeAir edgeAir = list.get(0);
+                                    if (!BaseUtils.isNull(edgeAir) && !BaseUtils.isNull(edgeAir.config)) {
+                                        String objectId = edgeAir.getObjectId();
+                                        SpUtils.getInstant().put(OBJECT_ID, objectId);
+
+                                        EdgeBean bean = JsonHelper.fromJson(edgeAir.config, EdgeBean.class);
+                                        if (!BaseUtils.isNull(bean)) {
+                                            List<EdgeBean.Edge> edges = bean.edge;
+                                            for (EdgeBean.Edge edge : edges) {
+                                                if (Constant.DEBUG) {
+                                                    LogUtils.d(TAG, "fetch edge " + edge.direction + " edge, postion = " + edge.postion + " , packageName = " + edge.packageName);
+                                                }
+
+                                                Edge config = new Edge();
+                                                config.packageName = edge.packageName;
+                                                config.direction = edge.direction.toLowerCase();
+                                                if (EdgeDirection.LEFT.name().toLowerCase().equals(config.direction)) {
+                                                    config.item = CoreManager.getDefault().getImpl(IEdgeProvider.class).encodeItem(EdgeDirection.LEFT, edge.postion);
+                                                } else if (EdgeDirection.RIGHT.name().toLowerCase().equals(config.direction)) {
+                                                    config.item = CoreManager.getDefault().getImpl(IEdgeProvider.class).encodeItem(EdgeDirection.RIGHT, edge.postion);
+                                                } else if (EdgeDirection.UP.name().toLowerCase().equals(config.direction)) {
+                                                    config.item = CoreManager.getDefault().getImpl(IEdgeProvider.class).encodeItem(EdgeDirection.UP, edge.postion);
+                                                }
+
+                                                CoreManager.getDefault().getImpl(IEdgeProvider.class).insertOrUpdateConfig(config);
+                                            }
+                                        }
+                                    }
+
+                                }
+                            }
+                        }
+                    });
+                }
+            });
+        }
+    }
+
+}
diff --git a/core/src/com/journeyOS/core/Version.java b/core/src/com/journeyOS/core/Version.java
new file mode 100644
index 0000000..d30f757
--- /dev/null
+++ b/core/src/com/journeyOS/core/Version.java
@@ -0,0 +1,48 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core;
+
+import android.content.Context;
+import android.content.pm.PackageManager;
+import android.os.Build;
+
+public class Version {
+    public static int buildVersion() {
+        return Build.VERSION.SDK_INT;
+    }
+
+    public static String getVersionName(Context context) {
+        String versionName = null;
+        try {
+            versionName = context.getApplicationContext().getPackageManager().getPackageInfo(context.getApplicationContext().getPackageName(), 0).versionName;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return versionName;
+    }
+
+    public static int getVersionCode(Context context) {
+        int versionCode = 0;
+        try {
+            versionCode = context.getApplicationContext().getPackageManager().getPackageInfo(context.getApplicationContext().getPackageName(), 0).versionCode;
+        } catch (PackageManager.NameNotFoundException e) {
+            e.printStackTrace();
+        }
+        return versionCode;
+    }
+
+}
diff --git a/core/src/com/journeyOS/core/api/edge/IEdge.java b/core/src/com/journeyOS/core/api/edge/IEdge.java
index 9a36515..9fc57d8 100644
--- a/core/src/com/journeyOS/core/api/edge/IEdge.java
+++ b/core/src/com/journeyOS/core/api/edge/IEdge.java
@@ -20,6 +20,9 @@ import com.journeyOS.core.api.ICoreApi;
 import com.journeyOS.core.type.EdgeDirection;
 
 public interface IEdge extends ICoreApi {
+
+    void showingOrHidingBall(boolean isShowing);
+
     /**
      * 显示edge
      *
diff --git a/core/src/com/journeyOS/core/api/edgeprovider/IUserProvider.java b/core/src/com/journeyOS/core/api/edgeprovider/IUserProvider.java
new file mode 100644
index 0000000..1145483
--- /dev/null
+++ b/core/src/com/journeyOS/core/api/edgeprovider/IUserProvider.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+
+package com.journeyOS.core.api.edgeprovider;
+
+import com.journeyOS.core.api.ICoreApi;
+import com.journeyOS.core.database.user.User;
+
+public interface IUserProvider extends ICoreApi {
+
+    User getCurrentAccount();
+
+    /**
+     * 获取用户信息
+     *
+     * @param userId 用户ID
+     * @return 用户信息
+     */
+    User getConfig(String userId);
+
+    /**
+     * 更新用户信息
+     *
+     * @param user 用户信息
+     */
+    void insertOrUpdateUser(User user);
+
+    /**
+     * 删除用户信息
+     *
+     * @param user 用户信息
+     */
+    void deleteUser(User user);
+
+    /**
+     * 删除全部悬浮球的配置
+     */
+    void deleteAll();
+}
diff --git a/core/src/com/journeyOS/core/api/plugins/IPlugins.java b/core/src/com/journeyOS/core/api/plugins/IPlugins.java
index 95328e7..6901d28 100644
--- a/core/src/com/journeyOS/core/api/plugins/IPlugins.java
+++ b/core/src/com/journeyOS/core/api/plugins/IPlugins.java
@@ -16,7 +16,9 @@
 
 package com.journeyOS.core.api.plugins;
 
+import android.app.Activity;
 import android.content.Context;
+import android.support.v4.app.Fragment;
 
 import com.journeyOS.core.api.ICoreApi;
 import com.journeyOS.core.type.EdgeDirection;
@@ -47,4 +49,24 @@ public interface IPlugins extends ICoreApi {
      * 启动com.journeyOS.liteweather
      */
     void navigationWeatherApp(Context context);
+
+    /**
+     * 获取设置Fragment
+     */
+    Fragment provideSettingsFragment(Activity activity);
+
+    /**
+     * 获取关于Fragment
+     */
+    Fragment provideAboutFragment(Activity activity);
+
+    /**
+     * 获取权限Fragment
+     */
+    Fragment providePermissionFragment(Activity activity);
+
+    /**
+     * 获取登陆注册Fragment
+     */
+    Fragment provideLoginFragment(Activity activity);
 }
diff --git a/core/src/com/journeyOS/core/base/BaseActivity.java b/core/src/com/journeyOS/core/base/BaseActivity.java
index 9301f22..6c9306d 100644
--- a/core/src/com/journeyOS/core/base/BaseActivity.java
+++ b/core/src/com/journeyOS/core/base/BaseActivity.java
@@ -36,15 +36,15 @@ public abstract class BaseActivity extends AppCompatActivity implements BaseView
     protected void onCreate(Bundle savedInstanceState) {
         super.onCreate(savedInstanceState);
         initBeforeView();
-        setContentView(getContentViewId());
+        setContentView(attachLayoutRes());
         ButterKnife.bind(this);
         Router.getDefault().register(this);
         initViews();
-        initDataObserver();
+        initDataObserver(savedInstanceState);
         ActivityUtil.getInstance().addActivity(this);
     }
 
-    protected void initDataObserver() {
+    protected void initDataObserver(Bundle savedInstanceState) {
 
     }
 
diff --git a/core/src/com/journeyOS/core/base/BaseFragment.java b/core/src/com/journeyOS/core/base/BaseFragment.java
index a00d9a5..ec558c6 100644
--- a/core/src/com/journeyOS/core/base/BaseFragment.java
+++ b/core/src/com/journeyOS/core/base/BaseFragment.java
@@ -59,15 +59,15 @@ public abstract class BaseFragment extends Fragment implements BaseViewInit {
     @Nullable
     @Override
     public View onCreateView(@NonNull LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
-        View rootView = inflater.inflate(getContentViewId(), container, false);
+        View rootView = inflater.inflate(attachLayoutRes(), container, false);
         ButterKnife.bind(this, rootView);
         Router.getDefault().register(this);
         initViews();
-        initDataObserver();
+        initDataObserver(savedInstanceState);
         return rootView;
     }
 
-    protected void initDataObserver() {
+    protected void initDataObserver(Bundle savedInstanceState) {
     }
 
 }
diff --git a/core/src/com/journeyOS/core/base/BaseViewInit.java b/core/src/com/journeyOS/core/base/BaseViewInit.java
index d24e6b1..07a530b 100644
--- a/core/src/com/journeyOS/core/base/BaseViewInit.java
+++ b/core/src/com/journeyOS/core/base/BaseViewInit.java
@@ -18,7 +18,7 @@ package com.journeyOS.core.base;
 
 
 public interface BaseViewInit {
-    int getContentViewId();
+    int attachLayoutRes();
 
     void initViews();
 
diff --git a/core/src/com/journeyOS/core/config/AppConfig.java b/core/src/com/journeyOS/core/config/AppConfig.java
index c2b4197..8a99ad8 100644
--- a/core/src/com/journeyOS/core/config/AppConfig.java
+++ b/core/src/com/journeyOS/core/config/AppConfig.java
@@ -28,6 +28,7 @@ import com.journeyOS.core.R;
 import com.tencent.bugly.Bugly;
 import com.tencent.bugly.beta.Beta;
 
+import cn.bmob.v3.Bmob;
 import es.dmoral.toasty.Toasty;
 
 
@@ -41,6 +42,7 @@ public class AppConfig {
         initFile();
         initSharedPreference(context);
         initToastyConfig(context);
+        initBmob(context);
     }
 
     private static void initCrashReport(Context context) {
@@ -80,4 +82,8 @@ public class AppConfig {
                 .tintIcon(true)
                 .apply();
     }
+
+    private static void initBmob(Application context) {
+        Bmob.initialize(context, "6aa0fcc54f48025459d573c92e95870b");
+    }
 }
diff --git a/core/src/com/journeyOS/core/database/DBConfigs.java b/core/src/com/journeyOS/core/database/DBConfigs.java
index 8d98171..b994acb 100644
--- a/core/src/com/journeyOS/core/database/DBConfigs.java
+++ b/core/src/com/journeyOS/core/database/DBConfigs.java
@@ -20,7 +20,7 @@ public class DBConfigs {
     //database name
     public static final String DB_NAME = "edge";
 
-    public static final int DB_VERSION = 3;
+    public static final int DB_VERSION = 4;
 
     //table
     public static final String EDGE_TABLE = "edge";
@@ -70,4 +70,19 @@ public class DBConfigs {
     //column
     public static final String WEATHER_TIME = "time";
 
+    //table
+    public static final String USER_TABLE = "user";
+    //column
+    public static final String USER_ID = "objectId";
+    //column
+    public static final String USER_NAME = "userName";
+    //column
+    public static final String USER_ICON = "icon";
+    //column
+    public static final String USER_PHONE = "phone";
+    //column
+    public static final String USER_EMAIL = "email";
+    //column
+    public static final String USER_TOKEN = "token";
+
 }
diff --git a/core/src/com/journeyOS/core/database/DBHelper.java b/core/src/com/journeyOS/core/database/DBHelper.java
index 095d558..0cc4767 100644
--- a/core/src/com/journeyOS/core/database/DBHelper.java
+++ b/core/src/com/journeyOS/core/database/DBHelper.java
@@ -39,9 +39,16 @@ public class DBHelper {
         }
     };
 
+    static final Migration MIGRATION_3_4 = new Migration(3, 4) {
+        @Override
+        public void migrate(@NonNull final SupportSQLiteDatabase database) {
+            database.execSQL("CREATE TABLE user (userId TEXT NOT NULL, userName TEXT, icon TEXT, phone TEXT, email TEXT, token TEXT, PRIMARY KEY(userId))");
+        }
+    };
+
     public static <T extends RoomDatabase> T provider(Context context, Class<T> dbCls, String dbName) {
         return Room.databaseBuilder(context, dbCls, dbName)
-                .addMigrations(MIGRATION_1_2, MIGRATION_2_3)
+                .addMigrations(MIGRATION_1_2, MIGRATION_2_3, MIGRATION_3_4)
                 .fallbackToDestructiveMigration().build();
     }
 }
diff --git a/core/src/com/journeyOS/core/database/EdgeDatabase.java b/core/src/com/journeyOS/core/database/EdgeDatabase.java
index 7232015..e4f709e 100644
--- a/core/src/com/journeyOS/core/database/EdgeDatabase.java
+++ b/core/src/com/journeyOS/core/database/EdgeDatabase.java
@@ -25,10 +25,12 @@ import com.journeyOS.core.database.city.City;
 import com.journeyOS.core.database.city.CityDao;
 import com.journeyOS.core.database.edge.Edge;
 import com.journeyOS.core.database.edge.EdgeDao;
+import com.journeyOS.core.database.user.User;
+import com.journeyOS.core.database.user.UserDao;
 import com.journeyOS.core.database.weather.Weather;
 import com.journeyOS.core.database.weather.WeatherDao;
 
-@Database(entities = {Edge.class, Ball.class, City.class, Weather.class}, version = DBConfigs.DB_VERSION, exportSchema = false)
+@Database(entities = {Edge.class, Ball.class, City.class, Weather.class, User.class}, version = DBConfigs.DB_VERSION, exportSchema = false)
 public abstract class EdgeDatabase extends RoomDatabase {
     public abstract EdgeDao edgeDao();
 
@@ -37,4 +39,6 @@ public abstract class EdgeDatabase extends RoomDatabase {
     public abstract CityDao cityDao();
 
     public abstract WeatherDao weatherDao();
+
+    public abstract UserDao userDao();
 }
diff --git a/core/src/com/journeyOS/core/database/edge/EdgeAir.java b/core/src/com/journeyOS/core/database/edge/EdgeAir.java
new file mode 100644
index 0000000..3f070a5
--- /dev/null
+++ b/core/src/com/journeyOS/core/database/edge/EdgeAir.java
@@ -0,0 +1,28 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core.database.edge;
+
+import com.journeyOS.core.database.user.EdgeUser;
+
+import cn.bmob.v3.BmobObject;
+
+public class EdgeAir extends BmobObject {
+
+    public EdgeUser author;
+
+    public String config;
+}
diff --git a/core/src/com/journeyOS/core/database/edge/EdgeRepositoryImpl.java b/core/src/com/journeyOS/core/database/edge/EdgeRepositoryImpl.java
index 71ba013..c553c85 100644
--- a/core/src/com/journeyOS/core/database/edge/EdgeRepositoryImpl.java
+++ b/core/src/com/journeyOS/core/database/edge/EdgeRepositoryImpl.java
@@ -22,6 +22,7 @@ import com.journeyOS.base.utils.FileIOUtils;
 import com.journeyOS.base.utils.JsonHelper;
 import com.journeyOS.base.utils.LogUtils;
 import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.SyncManager;
 import com.journeyOS.core.api.edgeprovider.IEdgeProvider;
 import com.journeyOS.core.database.DBConfigs;
 import com.journeyOS.core.database.DBHelper;
@@ -72,6 +73,7 @@ public class EdgeRepositoryImpl implements IEdgeProvider {
     public void insertOrUpdateConfig(Edge config) {
         synchronized (mLock) {
             edgeDao.insert(config);
+            SyncManager.getDefault().sync();
         }
     }
 
@@ -79,6 +81,7 @@ public class EdgeRepositoryImpl implements IEdgeProvider {
     public void deleteConfig(Edge config) {
         synchronized (mLock) {
             edgeDao.delete(config);
+            SyncManager.getDefault().sync();
         }
     }
 
@@ -86,6 +89,7 @@ public class EdgeRepositoryImpl implements IEdgeProvider {
     public void deleteAll() {
         synchronized (mLock) {
             edgeDao.deleteAll();
+//            SyncManager.getDefault().sync();
         }
     }
 
@@ -135,4 +139,5 @@ public class EdgeRepositoryImpl implements IEdgeProvider {
         }
         return postion;
     }
+
 }
diff --git a/core/src/com/journeyOS/core/database/user/EdgeUser.java b/core/src/com/journeyOS/core/database/user/EdgeUser.java
new file mode 100644
index 0000000..ad8146d
--- /dev/null
+++ b/core/src/com/journeyOS/core/database/user/EdgeUser.java
@@ -0,0 +1,91 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core.database.user;
+
+import cn.bmob.v3.BmobUser;
+import cn.bmob.v3.datatype.BmobFile;
+import cn.bmob.v3.datatype.BmobGeoPoint;
+
+public class EdgeUser extends BmobUser {
+
+    /**
+     * 昵称
+     */
+    private String nickname;
+
+    /**
+     * 年龄
+     */
+    private Integer age;
+
+    /**
+     * 性别
+     */
+    private Integer gender;
+
+    /**
+     * 用户当前位置
+     */
+    private BmobGeoPoint address;
+
+
+    /**
+     * 头像
+     */
+    private BmobFile avatar;
+
+
+    public String getNickname() {
+        return nickname;
+    }
+
+    public void setNickname(String nickname) {
+        this.nickname = nickname;
+    }
+
+    public Integer getAge() {
+        return age;
+    }
+
+    public void setAge(Integer age) {
+        this.age = age;
+    }
+
+    public Integer getGender() {
+        return gender;
+    }
+
+    public void setGender(Integer gender) {
+        this.gender = gender;
+    }
+
+    public BmobGeoPoint getAddress() {
+        return address;
+    }
+
+    public void setAddress(BmobGeoPoint address) {
+        this.address = address;
+    }
+
+    public BmobFile getAvatar() {
+        return avatar;
+    }
+
+    public void setAvatar(BmobFile avatar) {
+        this.avatar = avatar;
+    }
+}
diff --git a/core/src/com/journeyOS/core/database/user/User.java b/core/src/com/journeyOS/core/database/user/User.java
new file mode 100644
index 0000000..78c42b9
--- /dev/null
+++ b/core/src/com/journeyOS/core/database/user/User.java
@@ -0,0 +1,66 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core.database.user;
+
+import android.arch.persistence.room.ColumnInfo;
+import android.arch.persistence.room.Entity;
+import android.support.annotation.NonNull;
+
+import com.journeyOS.core.database.DBConfigs;
+
+@Entity(tableName = DBConfigs.USER_TABLE, primaryKeys = {DBConfigs.USER_ID})
+public class User {
+
+    /**
+     * userid
+     */
+    @NonNull
+    @ColumnInfo(name = DBConfigs.USER_ID)
+    public String userId;
+
+    /**
+     * username
+     */
+    @NonNull
+    @ColumnInfo(name = DBConfigs.USER_NAME)
+    public String userName;
+
+    /**
+     * bitmap to base64
+     */
+    @ColumnInfo(name = DBConfigs.USER_ICON)
+    public String icon;
+
+    /**
+     * user phone
+     */
+    @ColumnInfo(name = DBConfigs.USER_PHONE)
+    public String phone;
+
+    /**
+     * user email
+     */
+    @ColumnInfo(name = DBConfigs.USER_EMAIL)
+    public String email;
+
+
+    /**
+     * token
+     */
+    @ColumnInfo(name = DBConfigs.USER_TOKEN)
+    public String token;
+}
diff --git a/core/src/com/journeyOS/core/database/user/UserDao.java b/core/src/com/journeyOS/core/database/user/UserDao.java
new file mode 100644
index 0000000..f97a009
--- /dev/null
+++ b/core/src/com/journeyOS/core/database/user/UserDao.java
@@ -0,0 +1,53 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core.database.user;
+
+import android.arch.persistence.room.Dao;
+import android.arch.persistence.room.Delete;
+import android.arch.persistence.room.Insert;
+import android.arch.persistence.room.OnConflictStrategy;
+import android.arch.persistence.room.Query;
+
+import com.journeyOS.core.database.DBConfigs;
+
+import java.util.List;
+
+@Dao
+public interface UserDao {
+
+    @Query("SELECT * FROM " + DBConfigs.USER_TABLE)
+    List<User> getUsers();
+
+    @Insert(onConflict = OnConflictStrategy.REPLACE)
+    void insert(List<User> users);
+
+    @Insert(onConflict = OnConflictStrategy.REPLACE)
+    void insert(User user);
+
+    @Query("SELECT * FROM " + DBConfigs.USER_TABLE +" LIMIT 1")
+    User getCurrentUser();
+
+    @Query("SELECT * FROM " + DBConfigs.USER_TABLE + " WHERE " + DBConfigs.USER_ID + " LIKE :userId  LIMIT 1")
+    User getUser(String userId);
+
+    @Delete
+    void delete(User user);
+
+    @Query("DELETE FROM " + DBConfigs.USER_TABLE)
+    void deleteAll();
+
+}
diff --git a/core/src/com/journeyOS/core/database/user/UserRepositoryImpl.java b/core/src/com/journeyOS/core/database/user/UserRepositoryImpl.java
new file mode 100644
index 0000000..1773b06
--- /dev/null
+++ b/core/src/com/journeyOS/core/database/user/UserRepositoryImpl.java
@@ -0,0 +1,73 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.core.database.user;
+
+import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.api.edgeprovider.IUserProvider;
+import com.journeyOS.core.database.DBConfigs;
+import com.journeyOS.core.database.DBHelper;
+import com.journeyOS.core.database.EdgeDatabase;
+import com.journeyOS.literouter.annotation.ARouterInject;
+
+@ARouterInject(api = IUserProvider.class)
+public class UserRepositoryImpl implements IUserProvider {
+    private static final String TAG = UserRepositoryImpl.class.getSimpleName();
+    private UserDao userDao;
+    private Object mLock = new Object();
+
+    @Override
+    public void onCreate() {
+        EdgeDatabase database = DBHelper.provider(CoreManager.getDefault().getContext(), EdgeDatabase.class, DBConfigs.DB_NAME);
+        userDao = database.userDao();
+    }
+
+
+    @Override
+    public User getCurrentAccount() {
+        synchronized (mLock) {
+            return userDao.getCurrentUser();
+        }
+    }
+
+    @Override
+    public User getConfig(String userId) {
+        synchronized (mLock) {
+            return userDao.getUser(userId);
+        }
+    }
+
+    @Override
+    public void insertOrUpdateUser(User user) {
+        synchronized (mLock) {
+            userDao.insert(user);
+        }
+    }
+
+    @Override
+    public void deleteUser(User user) {
+        synchronized (mLock) {
+            userDao.delete(user);
+        }
+    }
+
+    @Override
+    public void deleteAll() {
+        synchronized (mLock) {
+            userDao.deleteAll();
+        }
+    }
+}
diff --git a/edge/AndroidManifest.xml b/edge/AndroidManifest.xml
index 92dbaff..9bb25ef 100644
--- a/edge/AndroidManifest.xml
+++ b/edge/AndroidManifest.xml
@@ -22,13 +22,22 @@
         android:icon="@drawable/svg_core_ball"
         android:label="@string/app_name">
 
+        <activity
+            android:name=".ui.activity.EdgeActivity"
+            android:excludeFromRecents="true"
+            android:theme="@style/base_AppTheme">
+            <intent-filter>
+                <action android:name="android.intent.action.MAIN" />
+                <category android:name="android.intent.category.LAUNCHER" />
+            </intent-filter>
+        </activity>
+
         <activity
             android:name=".ui.SettingsActivity"
             android:excludeFromRecents="true"
             android:theme="@style/settings">
             <intent-filter>
                 <action android:name="android.intent.action.MAIN" />
-                <category android:name="android.intent.category.LAUNCHER" />
             </intent-filter>
         </activity>
 
diff --git a/edge/res/layout/activity_edge.xml b/edge/res/layout/activity_edge.xml
new file mode 100644
index 0000000..284ffd5
--- /dev/null
+++ b/edge/res/layout/activity_edge.xml
@@ -0,0 +1,43 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    android:orientation="vertical">
+
+    <android.support.v7.widget.Toolbar
+        android:id="@+id/toolbar"
+        android:layout_width="match_parent"
+        android:layout_height="@dimen/toolbar_height"
+        android:minHeight="@dimen/toolbar_height"
+        app:layout_scrollFlags="scroll|enterAlways"
+        app:popupTheme="@style/ToolbarPopupTheme"
+        app:theme="@style/ToolbarTheme"
+        app:titleTextAppearance="@style/ToolbarTitle" />
+
+    <FrameLayout
+        android:id="@+id/container"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent"
+        android:layout_below="@id/toolbar"
+        android:background="@color/main_background" />
+
+</LinearLayout>
+
+
diff --git a/edge/res/layout/menu_left_drawer.xml b/edge/res/layout/menu_left_drawer.xml
new file mode 100644
index 0000000..78f69cb
--- /dev/null
+++ b/edge/res/layout/menu_left_drawer.xml
@@ -0,0 +1,75 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:background="@color/dark_background"
+    android:orientation="vertical">
+
+    <RelativeLayout
+        android:layout_width="match_parent"
+        android:layout_height="wrap_content"
+        android:orientation="vertical"
+        android:layout_marginTop="@dimen/spacing_x_large"
+        android:padding="@dimen/spacing_normal">
+
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:id="@+id/user_avatar"
+            android:layout_width="@dimen/icon_size_x_large"
+            android:layout_height="@dimen/icon_size_x_large"
+            android:layout_alignParentLeft="true"
+            android:layout_gravity="center"
+            android:layout_marginLeft="@dimen/spacing_normal"
+            android:gravity="center"
+            android:src="@mipmap/user"
+            app:civ_border_color="@color/ivory"
+            app:civ_border_width="@dimen/divider_size" />
+
+        <LinearLayout
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_centerVertical="true"
+            android:layout_marginLeft="@dimen/spacing_normal"
+            android:layout_toRightOf="@id/user_avatar"
+            android:orientation="vertical">
+
+            <TextView
+                android:id="@+id/user"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@color/icon" />
+
+            <TextView
+                android:id="@+id/email"
+                android:layout_width="wrap_content"
+                android:layout_height="wrap_content"
+                android:textColor="@color/colorPrimary90" />
+        </LinearLayout>
+    </RelativeLayout>
+
+
+    <android.support.v7.widget.RecyclerView
+        android:id="@+id/list"
+        android:layout_width="240dp"
+        android:layout_height="wrap_content" />
+
+    <Space
+        android:layout_width="wrap_content"
+        android:layout_height="@dimen/spacing_xxx_large" />
+
+</LinearLayout>
\ No newline at end of file
diff --git a/edge/res/layout/tab_view.xml b/edge/res/layout/tab_view.xml
new file mode 100644
index 0000000..1d8d9d3
--- /dev/null
+++ b/edge/res/layout/tab_view.xml
@@ -0,0 +1,25 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<TextView xmlns:android="http://schemas.android.com/apk/res/android"
+    android:id="@+id/tab_text"
+    android:layout_width="wrap_content"
+    android:layout_height="wrap_content"
+    android:layout_gravity="center"
+    android:gravity="center"
+    android:textSize="@dimen/text_size_default"
+    android:textColor="@color/white" />
\ No newline at end of file
diff --git a/edge/res/values/arrays.xml b/edge/res/values/arrays.xml
new file mode 100644
index 0000000..d4175e1
--- /dev/null
+++ b/edge/res/values/arrays.xml
@@ -0,0 +1,31 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<resources>
+    <string-array name="slidingDrawerTitles">
+        <item>@string/menu_account</item>
+        <item>@string/menu_permission</item>
+        <item>@string/menu_settings</item>
+        <item>@string/menu_about</item>
+    </string-array>
+
+    <array name="slidingDrawerIcons">
+        <item>@drawable/svg_menu_user</item>
+        <item>@drawable/svg_menu_permission</item>
+        <item>@drawable/svg_menu_settings</item>
+        <item>@drawable/svg_menu_about</item>
+    </array>
+</resources>
\ No newline at end of file
diff --git a/edge/res/values/strings.xml b/edge/res/values/strings.xml
index dc8821b..2d3e9f6 100644
--- a/edge/res/values/strings.xml
+++ b/edge/res/values/strings.xml
@@ -15,11 +15,4 @@
   -->
 
 <resources>
-    <string name="app_name">Edge</string>
-    <string name="daemon">守护进程</string>
-    <string name="overflow">浮窗权限</string>
-    <string name="ball">悬浮球</string>
-    <string name="has_permission">已经获得</string>
-    <string name="add">添加</string>
-    <string name="weather_air_alty">空气质量：</string>
 </resources>
\ No newline at end of file
diff --git a/edge/src/com/journeyOS/edge/Dispatcher.java b/edge/src/com/journeyOS/edge/Dispatcher.java
index 05c6575..0f7a9a0 100644
--- a/edge/src/com/journeyOS/edge/Dispatcher.java
+++ b/edge/src/com/journeyOS/edge/Dispatcher.java
@@ -21,6 +21,7 @@ import android.content.res.Configuration;
 
 import com.journeyOS.base.utils.Singleton;
 import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.SyncManager;
 import com.journeyOS.core.api.edge.IEdge;
 import com.journeyOS.core.type.Direction;
 import com.journeyOS.core.type.EdgeDirection;
diff --git a/edge/src/com/journeyOS/edge/SlidingDrawer.java b/edge/src/com/journeyOS/edge/SlidingDrawer.java
new file mode 100644
index 0000000..c725fcb
--- /dev/null
+++ b/edge/src/com/journeyOS/edge/SlidingDrawer.java
@@ -0,0 +1,153 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.edge;
+
+import android.app.Activity;
+import android.content.res.TypedArray;
+import android.graphics.drawable.Drawable;
+import android.os.Bundle;
+import android.os.Handler;
+import android.support.v4.content.ContextCompat;
+import android.support.v7.widget.LinearLayoutManager;
+import android.support.v7.widget.RecyclerView;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.TextView;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.menu.DrawerAdapter;
+import com.journeyOS.base.menu.DrawerItem;
+import com.journeyOS.base.menu.SimpleItem;
+import com.yarolegovich.slidingrootnav.SlidingRootNav;
+import com.yarolegovich.slidingrootnav.SlidingRootNavBuilder;
+
+import java.util.Arrays;
+
+public class SlidingDrawer implements DrawerAdapter.OnItemSelectedListener {
+
+    private Activity mContext;
+    private String[] screenTitles;
+    private Drawable[] screenIcons;
+    private DrawerAdapter adapter;
+    private SlidingRootNav slidingRootNav;
+
+    private volatile static SlidingDrawer mSlidingDrawer;
+
+    public static SlidingDrawer getInstance(Activity context) {
+        if (mSlidingDrawer == null) {
+            synchronized (SlidingDrawer.class) {
+                if (mSlidingDrawer == null) {
+                    mSlidingDrawer = new SlidingDrawer(context);
+                }
+            }
+        }
+        return mSlidingDrawer;
+    }
+
+    private SlidingDrawer(Activity context) {
+        mContext = context;
+    }
+
+    public void initDrawer(Bundle savedInstanceState, Toolbar toolbar) {
+        slidingRootNav = new SlidingRootNavBuilder(mContext)
+                .withToolbarMenuToggle(toolbar)
+                .withMenuOpened(false)
+                .withContentClickableWhenMenuOpened(false)
+                .withSavedState(savedInstanceState)
+                .withMenuLayout(R.layout.menu_left_drawer)
+                .inject();
+
+        screenIcons = loadScreenIcons();
+        screenTitles = loadScreenTitles();
+
+        adapter = new DrawerAdapter(Arrays.asList(
+                createItemFor(Constant.MENU_USER),
+                createItemFor(Constant.MENU_PERMISSION),
+                createItemFor(Constant.MENU_SETTINGS).setChecked(true),
+                createItemFor(Constant.MENU_ABOUT)));
+        adapter.setListener(this);
+
+        RecyclerView list = mContext.findViewById(R.id.list);
+        list.setNestedScrollingEnabled(false);
+        list.setLayoutManager(new LinearLayoutManager(mContext));
+        list.setAdapter(adapter);
+
+//        EdgeUser authUser = CoreManager.getAuthUser();
+        ((TextView) mContext.findViewById(R.id.user)).setText("Solo");
+        ((TextView) mContext.findViewById(R.id.email)).setText("anqi.huang@outlook.com");
+//
+//        ImageEngine.load(CoreManager.getContext(), authUser.avatar, ((ImageView) mContext.findViewById(R.id.user_avatar)), R.mipmap.user);
+
+        adapter.setSelected(Constant.MENU_SETTINGS);
+    }
+
+    private String[] loadScreenTitles() {
+        return mContext.getResources().getStringArray(R.array.slidingDrawerTitles);
+    }
+
+    private Drawable[] loadScreenIcons() {
+        TypedArray ta = mContext.getResources().obtainTypedArray(R.array.slidingDrawerIcons);
+        Drawable[] icons = new Drawable[ta.length()];
+        for (int i = 0; i < ta.length(); i++) {
+            int id = ta.getResourceId(i, 0);
+            if (id != 0) {
+                icons[i] = ContextCompat.getDrawable(mContext, id);
+            }
+        }
+        ta.recycle();
+        return icons;
+    }
+
+    private DrawerItem createItemFor(int position) {
+        return new SimpleItem(screenIcons[position], screenTitles[position])
+//                .withIconTint(R.color.colorPrimary90)
+                .withTextTint(R.color.icon)
+//                .withSelectedIconTint(R.color.icon)
+                .withSelectedTextTint(R.color.red);
+    }
+
+    @Override
+    public void onItemSelected(final int position) {
+        slidingRootNav.closeMenu();
+        new Handler().postDelayed(new Runnable() {
+            @Override
+            public void run() {
+                if (listener != null) {
+                    listener.onItemSelected(position);
+                }
+            }
+        }, 60l);
+    }
+
+    public View getView(int postion) {
+        return adapter.getView(postion);
+    }
+
+    public void openMenu() {
+        slidingRootNav.openMenu(true);
+    }
+
+    private OnItemSelectedListener listener;
+
+    public void setListener(OnItemSelectedListener listener) {
+        this.listener = listener;
+    }
+
+    public interface OnItemSelectedListener {
+        void onItemSelected(int position);
+    }
+}
diff --git a/edge/src/com/journeyOS/edge/provider/EdgeImpl.java b/edge/src/com/journeyOS/edge/provider/EdgeImpl.java
index 86b5010..ed900f3 100644
--- a/edge/src/com/journeyOS/edge/provider/EdgeImpl.java
+++ b/edge/src/com/journeyOS/edge/provider/EdgeImpl.java
@@ -21,6 +21,7 @@ import android.os.Message;
 
 import com.journeyOS.core.api.edge.IEdge;
 import com.journeyOS.core.type.EdgeDirection;
+import com.journeyOS.edge.EdgeServiceManager;
 import com.journeyOS.edge.wm.EdgeManager;
 import com.journeyOS.literouter.annotation.ARouterInject;
 
@@ -38,6 +39,11 @@ public class EdgeImpl implements IEdge {
     public void onCreate() {
     }
 
+    @Override
+    public void showingOrHidingBall(boolean isShowing) {
+        EdgeServiceManager.getDefault().showingOrHidingBall(isShowing);
+    }
+
     @Override
     public void showingEdge(int direction) {
         EdgeDirection ed = EdgeDirection.valueOf(direction);
diff --git a/edge/src/com/journeyOS/edge/ui/SettingsActivity.java b/edge/src/com/journeyOS/edge/ui/SettingsActivity.java
deleted file mode 100644
index b1bc245..0000000
--- a/edge/src/com/journeyOS/edge/ui/SettingsActivity.java
+++ /dev/null
@@ -1,113 +0,0 @@
-/*
- * Copyright (c) 2018 anqi.huang@outlook.com
- *
- * Licensed under the Apache License, Version 2.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- *
- *     http://www.apache.org/licenses/LICENSE-2.0
- *
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-
-package com.journeyOS.edge.ui;
-
-import android.content.Context;
-import android.support.v7.widget.Toolbar;
-import android.widget.Toast;
-
-import com.journeyOS.base.Constant;
-import com.journeyOS.base.persistence.SpUtils;
-import com.journeyOS.base.utils.UIUtils;
-import com.journeyOS.base.widget.SettingSwitch;
-import com.journeyOS.core.CoreManager;
-import com.journeyOS.core.api.edgeprovider.ICityProvider;
-import com.journeyOS.core.api.thread.ICoreExecutors;
-import com.journeyOS.core.base.BaseActivity;
-import com.journeyOS.core.permission.IPermission;
-import com.journeyOS.edge.EdgeServiceManager;
-import com.journeyOS.edge.R;
-import com.journeyOS.plugins.R2;
-
-import butterknife.BindView;
-import butterknife.OnClick;
-import es.dmoral.toasty.Toasty;
-
-public class SettingsActivity extends BaseActivity {
-
-    private Context mContext;
-
-    @BindView(R2.id.toolbar)
-    Toolbar mToolbar;
-
-    @BindView(R.id.daemon)
-    SettingSwitch mDaemon;
-
-    @BindView(R.id.ball)
-    SettingSwitch mBall;
-
-    @Override
-    public void initBeforeView() {
-        super.initBeforeView();
-        mContext = CoreManager.getDefault().getContext();
-    }
-
-    @Override
-    public int getContentViewId() {
-        return R.layout.activity_settings;
-    }
-
-    @Override
-    public void initViews() {
-        UIUtils.setStatusBarColor(this, this.getResources().getColor(R.color.lightskyblue));
-//        mToolbar.setTitle(R.string.tool_bar_title);
-        setSupportActionBar(mToolbar);
-        getSupportActionBar().setDisplayHomeAsUpEnabled(true);
-
-        EdgeServiceManager.getDefault().bindEgdeService();
-        boolean daemon = SpUtils.getInstant().getBoolean(Constant.DAEMON, true);
-        mDaemon.setCheck(daemon);
-
-        boolean ball = SpUtils.getInstant().getBoolean(Constant.BALL, false);
-        mBall.setCheck(ball);
-        if (ball) {
-            EdgeServiceManager.getDefault().showingOrHidingBall(true);
-        }
-
-        CoreManager.getDefault().getImpl(ICoreExecutors.class).diskIOThread().execute(new Runnable() {
-            @Override
-            public void run() {
-                CoreManager.getDefault().getImpl(ICityProvider.class).loadCitys();
-            }
-        });
-    }
-
-    @OnClick({R.id.daemon})
-    public void listenerAutoStart() {
-        boolean daemon = SpUtils.getInstant().getBoolean(Constant.DAEMON, true);
-        mDaemon.setCheck(!daemon);
-        SpUtils.getInstant().put(Constant.DAEMON, !daemon);
-    }
-
-    @OnClick({R.id.ball})
-    public void listenerBall() {
-        boolean ball = SpUtils.getInstant().getBoolean(Constant.BALL, false);
-        mBall.setCheck(!ball);
-        SpUtils.getInstant().put(Constant.BALL, !ball);
-        EdgeServiceManager.getDefault().showingOrHidingBall(!ball);
-    }
-
-    @OnClick({R.id.overflow})
-    public void overflowPermission() {
-        boolean hasPermission = CoreManager.getDefault().getImpl(IPermission.class).canDrawOverlays(mContext);
-        if (hasPermission) {
-            String message = mContext.getString(R.string.has_permission) + mContext.getString(R.string.overflow);
-            Toasty.success(mContext, message, Toast.LENGTH_SHORT).show();
-        }
-    }
-
-}
diff --git a/edge/src/com/journeyOS/edge/ui/activity/EdgeActivity.java b/edge/src/com/journeyOS/edge/ui/activity/EdgeActivity.java
new file mode 100644
index 0000000..9060466
--- /dev/null
+++ b/edge/src/com/journeyOS/edge/ui/activity/EdgeActivity.java
@@ -0,0 +1,128 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.edge.ui.activity;
+
+import android.app.Activity;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.support.v7.widget.Toolbar;
+import android.view.View;
+import android.widget.FrameLayout;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.utils.LogUtils;
+import com.journeyOS.base.utils.UIUtils;
+import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.api.edgeprovider.ICityProvider;
+import com.journeyOS.core.api.plugins.IPlugins;
+import com.journeyOS.core.api.thread.ICoreExecutors;
+import com.journeyOS.core.base.BaseActivity;
+import com.journeyOS.core.database.user.EdgeUser;
+import com.journeyOS.edge.EdgeServiceManager;
+import com.journeyOS.edge.R;
+import com.journeyOS.edge.SlidingDrawer;
+
+import butterknife.BindView;
+
+public class EdgeActivity extends BaseActivity implements SlidingDrawer.OnItemSelectedListener {
+    private static final String TAG = EdgeActivity.class.getSimpleName();
+
+    @BindView(R.id.toolbar)
+    Toolbar mToolbar;
+
+    //@BindView(R.id.fragment_container)
+    FrameLayout mContainer;
+
+    Activity mContext;
+    Bundle mBundle;
+
+    @Override
+    public int attachLayoutRes() {
+        return R.layout.activity_edge;
+    }
+
+    @Override
+    public void initBeforeView() {
+        super.initBeforeView();
+        mContext = this;
+
+        CoreManager.getDefault().getImpl(ICoreExecutors.class).diskIOThread().execute(new Runnable() {
+            @Override
+            public void run() {
+                CoreManager.getDefault().getImpl(ICityProvider.class).loadCitys();
+            }
+        });
+    }
+
+    @Override
+    public void initViews() {
+        UIUtils.setStatusBarColor(this, this.getResources().getColor(R.color.colorPrimary));
+        setSupportActionBar(mToolbar);
+        mContainer = findViewById(R.id.container);
+
+        EdgeServiceManager.getDefault().bindEgdeService();
+    }
+
+    @Override
+    protected void initDataObserver(Bundle savedInstanceState) {
+        super.initDataObserver(savedInstanceState);
+        mBundle = savedInstanceState;
+        handleEdgeUserStatusObserver(null);
+    }
+
+    @Override
+    public void onItemSelected(int position) {
+        handleItemSelected(position);
+    }
+
+    void loadFragment(Fragment fragment) {
+        mContainer.setVisibility(View.VISIBLE);
+        getSupportFragmentManager()
+                .beginTransaction()
+                .replace(R.id.container, fragment)
+                .commit();
+    }
+
+    void handleEdgeUserStatusObserver(EdgeUser authUser) {
+        SlidingDrawer.getInstance(this).initDrawer(mBundle, mToolbar);
+        SlidingDrawer.getInstance(this).setListener(this);
+        mToolbar.setTitle(R.string.app_name);
+    }
+
+    void handleItemSelected(int position) {
+        LogUtils.d(TAG, "handle item selected, position = [" + position + "]");
+        switch (position) {
+            case Constant.MENU_USER:
+                mToolbar.setTitle(R.string.menu_account);
+                loadFragment(CoreManager.getDefault().getImpl(IPlugins.class).provideLoginFragment(mContext));
+                break;
+            case Constant.MENU_PERMISSION:
+                mToolbar.setTitle(R.string.menu_permission);
+                loadFragment(CoreManager.getDefault().getImpl(IPlugins.class).providePermissionFragment(mContext));
+
+                break;
+            case Constant.MENU_SETTINGS:
+                mToolbar.setTitle(R.string.menu_settings);
+                loadFragment(CoreManager.getDefault().getImpl(IPlugins.class).provideSettingsFragment(mContext));
+                break;
+            case Constant.MENU_ABOUT:
+                mToolbar.setTitle(R.string.menu_about);
+                loadFragment(CoreManager.getDefault().getImpl(IPlugins.class).provideAboutFragment(mContext));
+                break;
+        }
+    }
+}
diff --git a/edge/src/com/journeyOS/edge/ui/adapter/MainPageAdapter.java b/edge/src/com/journeyOS/edge/ui/adapter/MainPageAdapter.java
new file mode 100644
index 0000000..242ac61
--- /dev/null
+++ b/edge/src/com/journeyOS/edge/ui/adapter/MainPageAdapter.java
@@ -0,0 +1,90 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.edge.ui.adapter;
+
+import android.content.Context;
+import android.support.v4.app.Fragment;
+import android.support.v4.app.FragmentManager;
+import android.support.v4.app.FragmentStatePagerAdapter;
+import android.support.v4.util.Pair;
+import android.view.LayoutInflater;
+import android.view.View;
+import android.view.ViewGroup;
+import android.widget.TextView;
+
+import com.journeyOS.base.utils.BaseUtils;
+import com.journeyOS.edge.R;
+
+import java.util.ArrayList;
+import java.util.List;
+
+public class MainPageAdapter extends FragmentStatePagerAdapter {
+    private final List<Pair<Fragment, Integer>> mFragmentList = new ArrayList<>();
+
+    private Context context;
+
+    private Fragment curFragment;
+
+    public MainPageAdapter(Context context, FragmentManager manager) {
+        super(manager);
+        this.context = context;
+    }
+
+    @Override
+    public Fragment getItem(int position) {
+        return mFragmentList.get(position).first;
+    }
+
+    @Override
+    public int getCount() {
+        return mFragmentList.size();
+    }
+
+    public void addFrag(Pair<Fragment, Integer> fragmentPair) {
+        mFragmentList.add(fragmentPair);
+    }
+
+    public void clearAll() {
+        if (!BaseUtils.isNull(mFragmentList)) mFragmentList.clear();
+    }
+
+    public View getTabView(int position, ViewGroup parent) {
+        View view;
+        view = LayoutInflater.from(context).inflate(R.layout.tab_view, parent, false);
+        TextView textView = view.findViewById(R.id.tab_text);
+        textView.setText(mFragmentList.get(position).second);
+        return view;
+    }
+
+    @Override
+    public void destroyItem(ViewGroup container, int position, Object object) {
+        if (!BaseUtils.isNull(curFragment) && curFragment.equals(object)) {
+            curFragment = null;
+        }
+        super.destroyItem(container, position, object);
+    }
+
+    @Override
+    public void setPrimaryItem(ViewGroup container, int position, Object object) {
+        curFragment = (Fragment) object;
+        super.setPrimaryItem(container, position, object);
+    }
+
+    public Fragment getCurFragment() {
+        return curFragment;
+    }
+}
diff --git a/edge/src/com/journeyOS/edge/wm/EdgeManager.java b/edge/src/com/journeyOS/edge/wm/EdgeManager.java
index 850bee9..1ca9d9e 100644
--- a/edge/src/com/journeyOS/edge/wm/EdgeManager.java
+++ b/edge/src/com/journeyOS/edge/wm/EdgeManager.java
@@ -129,17 +129,15 @@ public class EdgeManager {
                     }
 
                     List<Edge> configs = CoreManager.getDefault().getImpl(IEdgeProvider.class).getConfigs(direction.name().toLowerCase());
-                    if (Constant.DEBUG)
+                    if (Constant.DEBUG) {
                         LogUtils.d(TAG, "get " + direction.name().toLowerCase() + " configs " + configs);
+                    }
                     for (Edge config : configs) {
-                        int postion = -1;
-                        String[] items = config.item.split(Constant.SEPARATOR);
-                        if (items != null) {
-                            postion = Integer.parseInt(items[1]);
-                        }
+                        int postion = CoreManager.getDefault().getImpl(IEdgeProvider.class).getPostion(config.item);
                         String packageName = config.packageName;
-                        if (Constant.DEBUG)
+                        if (Constant.DEBUG) {
                             LogUtils.d(TAG, "get " + direction.name().toLowerCase() + " edge, postion = " + postion + " , packageName = " + packageName);
+                        }
                         if (postion != -1) sCache.put(postion, config);
                     }
                     return configs;
@@ -222,10 +220,6 @@ public class EdgeManager {
         }
     }
 
-    boolean isLandscape() {
-        return mEdgeView == mUpEdgeView;
-    }
-
     LayoutParams getLayoutParams() {
         LayoutParams params = new LayoutParams();
         params.type = LayoutParams.TYPE_APPLICATION_OVERLAY;
@@ -239,5 +233,4 @@ public class EdgeManager {
         params.height = LayoutParams.MATCH_PARENT;
         return params;
     }
-
 }
diff --git a/plugins/res/layout/fragment_about.xml b/plugins/res/layout/fragment_about.xml
new file mode 100644
index 0000000..9a5426e
--- /dev/null
+++ b/plugins/res/layout/fragment_about.xml
@@ -0,0 +1,46 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    android:orientation="vertical">
+
+
+    <LinearLayout style="@style/wrap_layout">
+
+        <com.journeyOS.base.widget.SettingView
+            android:id="@+id/version"
+            style="@style/top_layout"
+            app:settingIcon="@drawable/svg_version"
+            app:settingTitle="@string/version"
+            app:showSummary="true" />
+
+        <View style="@style/bg_line" />
+
+        <com.journeyOS.base.widget.SettingView
+            android:id="@+id/email"
+            style="@style/bottom_layout"
+            app:settingIcon="@drawable/svg_email"
+            app:settingTitle="@string/email"
+            app:showSummary="true" />
+
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/plugins/res/layout/fragment_login.xml b/plugins/res/layout/fragment_login.xml
new file mode 100644
index 0000000..e6087a8
--- /dev/null
+++ b/plugins/res/layout/fragment_login.xml
@@ -0,0 +1,391 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent">
+
+    <RelativeLayout
+        android:id="@+id/login_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <android.support.v7.widget.CardView
+            android:id="@+id/cv"
+            android:layout_width="350dp"
+            android:layout_height="320dp"
+            android:layout_centerInParent="true"
+            app:cardCornerRadius="6dp"
+            app:cardElevation="3dp"
+            app:cardUseCompatPadding="true">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical">
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="45dp"
+                    android:layout_marginTop="10dp">
+
+                    <View
+                        android:layout_width="8dp"
+                        android:layout_height="match_parent"
+                        android:layout_alignParentStart="true"
+                        android:background="#2fa881" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_centerVertical="true"
+                        android:layout_marginStart="50dp"
+                        android:text="@string/login"
+                        android:textColor="#FFCC00"
+                        android:textSize="18sp"
+                        android:textStyle="bold" />
+                </RelativeLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="50dp"
+                    android:layout_marginTop="10dp"
+                    android:orientation="horizontal"
+                    android:paddingStart="50dp"
+                    android:paddingEnd="30dp">
+
+                    <android.support.design.widget.TextInputLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColorHint="#c5c5c5">
+
+                        <EditText
+                            android:id="@+id/login_username"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:background="@drawable/selector_bg_edit"
+                            android:hint="@string/login_username"
+                            android:inputType="phone"
+                            android:paddingBottom="2dp"
+                            android:textColor="#2fa881"
+                            android:textCursorDrawable="@drawable/bg_input_cursor"
+                            android:textSize="18sp" />
+                    </android.support.design.widget.TextInputLayout>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="50dp"
+                    android:orientation="horizontal"
+                    android:paddingStart="50dp"
+                    android:paddingEnd="30dp">
+
+                    <android.support.design.widget.TextInputLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColorHint="#c5c5c5">
+
+                        <EditText
+                            android:id="@+id/login_password"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:background="@drawable/selector_bg_edit"
+                            android:hint="@string/login_password"
+                            android:inputType="textPassword"
+                            android:paddingBottom="2dp"
+                            android:textColor="#2fa881"
+                            android:textCursorDrawable="@drawable/bg_input_cursor"
+                            android:textSize="18sp" />
+                    </android.support.design.widget.TextInputLayout>
+                </LinearLayout>
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:layout_marginTop="25dp"
+                    android:gravity="center">
+
+                    <Button
+                        android:id="@+id/login"
+                        android:layout_width="150dp"
+                        android:layout_height="50dp"
+                        android:background="@drawable/shape_bt"
+                        android:stateListAnimator="@drawable/state_list_animator_z"
+                        android:text="@string/login_go"
+                        android:textColor="#d3d3d3" />
+                </RelativeLayout>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_marginTop="5dp"
+                    android:text="@string/forgot_your_password"
+                    android:textColor="#9a9a9a"
+                    android:textSize="12sp"
+                    android:visibility="gone" />
+            </LinearLayout>
+        </android.support.v7.widget.CardView>
+
+        <android.support.design.widget.FloatingActionButton
+            android:id="@+id/fab_register"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignTop="@id/cv"
+            android:layout_alignEnd="@id/cv"
+            android:layout_marginTop="25dp"
+            android:layout_marginEnd="-20dp"
+            android:src="@drawable/svg_login_add"
+            android:transitionName="loginFab"
+            app:fabSize="normal" />
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:id="@+id/register_view"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <android.support.v7.widget.CardView
+            android:id="@+id/register_cv"
+            android:layout_width="350dp"
+            android:layout_height="350dp"
+            android:layout_centerInParent="true"
+            app:cardCornerRadius="6dp"
+            app:cardElevation="3dp"
+            app:cardUseCompatPadding="true">
+
+            <LinearLayout
+                android:layout_width="match_parent"
+                android:layout_height="match_parent"
+                android:orientation="vertical">
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="45dp"
+                    android:layout_marginTop="10dp">
+
+                    <View
+                        android:layout_width="8dp"
+                        android:layout_height="match_parent"
+                        android:layout_alignParentStart="true"
+                        android:background="#2fa881" />
+
+                    <TextView
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:layout_centerVertical="true"
+                        android:layout_marginStart="50dp"
+                        android:text="@string/register"
+                        android:textColor="#FFCC00"
+                        android:textSize="18sp"
+                        android:textStyle="bold" />
+                </RelativeLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="50dp"
+                    android:layout_marginTop="10dp"
+                    android:orientation="horizontal"
+                    android:paddingStart="50dp"
+                    android:paddingEnd="30dp">
+
+                    <android.support.design.widget.TextInputLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColorHint="#c5c5c5">
+
+                        <EditText
+                            android:id="@+id/register_username"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:background="@drawable/selector_bg_edit"
+                            android:hint="@string/regiter_phone"
+                            android:inputType="phone"
+                            android:paddingBottom="2dp"
+                            android:textColor="#2fa881"
+                            android:textCursorDrawable="@drawable/bg_input_cursor"
+                            android:textSize="18sp" />
+                    </android.support.design.widget.TextInputLayout>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="50dp"
+                    android:layout_marginTop="10dp"
+                    android:orientation="horizontal"
+                    android:paddingStart="50dp"
+                    android:paddingEnd="30dp">
+
+                    <android.support.design.widget.TextInputLayout
+                        android:layout_width="match_parent"
+                        android:layout_height="wrap_content"
+                        android:textColorHint="#c5c5c5">
+
+                        <EditText
+                            android:id="@+id/register_password"
+                            android:layout_width="match_parent"
+                            android:layout_height="wrap_content"
+                            android:background="@drawable/selector_bg_edit"
+                            android:hint="@string/login_password"
+                            android:inputType="textPassword"
+                            android:paddingBottom="2dp"
+                            android:textColor="#2fa881"
+                            android:textCursorDrawable="@drawable/bg_input_cursor"
+                            android:textSize="18sp" />
+                    </android.support.design.widget.TextInputLayout>
+                </LinearLayout>
+
+                <LinearLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="50dp"
+                    android:orientation="horizontal"
+                    android:paddingStart="50dp"
+                    android:paddingEnd="30dp">
+
+                    <android.support.design.widget.TextInputLayout
+                        android:layout_width="wrap_content"
+                        android:layout_height="wrap_content"
+                        android:textColorHint="#c5c5c5">
+
+                        <EditText
+                            android:id="@+id/register_code"
+                            android:layout_width="150dp"
+                            android:layout_height="wrap_content"
+                            android:background="@drawable/selector_bg_edit"
+                            android:hint="@string/regiter_code"
+                            android:inputType="numberDecimal"
+                            android:paddingBottom="2dp"
+                            android:textColor="#2fa881"
+                            android:textCursorDrawable="@drawable/bg_input_cursor"
+                            android:textSize="18sp" />
+                    </android.support.design.widget.TextInputLayout>
+
+                    <com.journeyOS.base.widget.TimingButton
+                        android:id="@+id/smsButton"
+                        android:layout_width="wrap_content"
+                        android:layout_height="40dp"
+                        android:layout_marginStart="20dp"
+                        android:text="@string/get_sms_code"
+                        android:textColor="@color/red"
+                        app:tb_psText="@string/reget_sms_code"
+                        app:tb_totalTime="60000" />
+
+                </LinearLayout>
+
+                <RelativeLayout
+                    android:layout_width="match_parent"
+                    android:layout_height="60dp"
+                    android:layout_marginTop="25dp"
+                    android:gravity="center">
+
+                    <Button
+                        android:id="@+id/register"
+                        android:layout_width="150dp"
+                        android:layout_height="50dp"
+                        android:background="@drawable/shape_bt"
+                        android:stateListAnimator="@drawable/state_list_animator_z"
+                        android:text="@string/next"
+                        android:textColor="#d3d3d3" />
+                </RelativeLayout>
+
+                <TextView
+                    android:layout_width="wrap_content"
+                    android:layout_height="wrap_content"
+                    android:layout_gravity="center_horizontal"
+                    android:layout_marginTop="5dp"
+                    android:text="@string/forgot_your_password"
+                    android:textColor="#9a9a9a"
+                    android:textSize="12sp"
+                    android:visibility="gone" />
+            </LinearLayout>
+        </android.support.v7.widget.CardView>
+
+        <android.support.design.widget.FloatingActionButton
+            android:id="@+id/fab_close"
+            android:layout_width="wrap_content"
+            android:layout_height="wrap_content"
+            android:layout_alignTop="@id/register_cv"
+            android:layout_alignEnd="@id/register_cv"
+            android:layout_marginTop="25dp"
+            android:layout_marginEnd="-20dp"
+            android:src="@drawable/svg_login_clear"
+            android:transitionName="loginFab"
+            app:fabSize="normal" />
+    </RelativeLayout>
+
+    <RelativeLayout
+        android:id="@+id/user_info"
+        android:layout_width="match_parent"
+        android:layout_height="match_parent">
+
+        <de.hdodenhof.circleimageview.CircleImageView
+            android:id="@+id/user_avatar"
+            android:layout_width="@dimen/icon_size_x_large"
+            android:layout_height="@dimen/icon_size_x_large"
+            android:layout_alignParentLeft="true"
+            android:layout_gravity="center"
+            android:layout_marginLeft="@dimen/spacing_normal"
+            android:gravity="center"
+            android:src="@mipmap/user"
+            android:visibility="gone"
+            app:civ_border_color="@color/ivory"
+            app:civ_border_width="@dimen/divider_size" />
+
+        <LinearLayout style="@style/wrap_layout">
+
+            <com.journeyOS.base.widget.SettingSwitch
+                android:id="@+id/auto_sync"
+                style="@style/single_layout"
+                android:theme="@style/CheckBox"
+                app:settingIcon="@drawable/svg_daemon"
+                app:settingTitle="@string/auto_sync" />
+
+            <View style="@style/bg_line" />
+
+            <com.journeyOS.base.widget.SettingText
+                android:id="@+id/user_id"
+                style="@style/mid_layout"
+                app:settingIcon="@drawable/svg_menu_user"
+                app:settingTextColor="@color/text_secondary_dark"
+                app:settingTitle="@string/userid" />
+
+            <View style="@style/bg_line" />
+
+            <com.journeyOS.base.widget.SettingText
+                android:id="@+id/user_phone"
+                style="@style/bottom_layout"
+                app:settingIcon="@drawable/svg_iphone_x"
+                app:settingTextColor="@color/text_secondary_dark"
+                app:settingTitle="@string/userphone" />
+
+            <View
+                style="@style/bg_line"
+                android:visibility="gone" />
+
+            <com.journeyOS.base.widget.SettingView
+                android:id="@+id/user_email"
+                style="@style/bottom_layout"
+                android:visibility="gone"
+                app:settingIcon="@drawable/svg_email"
+                app:settingTitle="@string/useremail"
+                app:showSummary="true" />
+
+        </LinearLayout>
+
+    </RelativeLayout>
+
+</RelativeLayout>
\ No newline at end of file
diff --git a/plugins/res/layout/fragment_permission.xml b/plugins/res/layout/fragment_permission.xml
new file mode 100644
index 0000000..3cdc1e2
--- /dev/null
+++ b/plugins/res/layout/fragment_permission.xml
@@ -0,0 +1,35 @@
+<?xml version="1.0" encoding="utf-8"?><!--
+  Copyright (c) 2019 anqi.huang@outlook.com
+
+  Licensed under the Apache License, Version 2.0 (the "License");
+  you may not use this file except in compliance with the License.
+  You may obtain a copy of the License at
+
+      http://www.apache.org/licenses/LICENSE-2.0
+
+  Unless required by applicable law or agreed to in writing, software
+  distributed under the License is distributed on an "AS IS" BASIS,
+  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+  See the License for the specific language governing permissions and
+  limitations under the License.
+  -->
+
+<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
+    xmlns:app="http://schemas.android.com/apk/res-auto"
+    android:layout_width="match_parent"
+    android:layout_height="match_parent"
+    android:fitsSystemWindows="true"
+    android:orientation="vertical">
+
+
+    <LinearLayout style="@style/wrap_layout">
+
+        <com.journeyOS.base.widget.SettingView
+            android:id="@+id/overflow"
+            style="@style/single_layout"
+            app:settingIcon="@drawable/svg_overflow"
+            app:settingTitle="@string/overflow" />
+
+    </LinearLayout>
+
+</LinearLayout>
\ No newline at end of file
diff --git a/edge/res/layout/activity_settings.xml b/plugins/res/layout/fragment_settings.xml
similarity index 65%
rename from edge/res/layout/activity_settings.xml
rename to plugins/res/layout/fragment_settings.xml
index 3c43849..25f299d 100644
--- a/edge/res/layout/activity_settings.xml
+++ b/plugins/res/layout/fragment_settings.xml
@@ -1,5 +1,5 @@
 <?xml version="1.0" encoding="utf-8"?><!--
-  Copyright (c) 2018 anqi.huang@outlook.com
+  Copyright (c) 2019 anqi.huang@outlook.com
 
   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
@@ -21,17 +21,6 @@
     android:fitsSystemWindows="true"
     android:orientation="vertical">
 
-    <android.support.v7.widget.Toolbar
-        android:id="@+id/toolbar"
-        android:layout_width="match_parent"
-        android:layout_height="45dp"
-        android:background="?attr/colorPrimary"
-        android:minHeight="45dp"
-        settings:popupTheme="@style/ToolbarPopupTheme"
-        settings:theme="@style/ToolbarTheme"
-        settings:titleTextAppearance="@style/ToolbarTitle" />
-
-    <!-- 全圆角-->
     <LinearLayout style="@style/wrap_layout">
 
         <com.journeyOS.base.widget.SettingSwitch
@@ -40,27 +29,16 @@
             android:theme="@style/CheckBox"
             settings:settingIcon="@drawable/svg_daemon"
             settings:settingTitle="@string/daemon" />
-    </LinearLayout>
 
-    <!--基础设置-->
-    <LinearLayout style="@style/wrap_layout">
+        <View style="@style/bg_line" />
 
         <com.journeyOS.base.widget.SettingSwitch
             android:id="@+id/ball"
-            style="@style/top_layout"
+            style="@style/bottom_layout"
             android:theme="@style/CheckBox"
             settings:settingIcon="@drawable/svg_ball"
             settings:settingTitle="@string/ball" />
 
-        <View style="@style/bg_line" />
-
-        <com.journeyOS.base.widget.SettingView
-            android:id="@+id/overflow"
-            style="@style/bottom_layout"
-            settings:settingIcon="@drawable/svg_overflow"
-            settings:settingTitle="@string/overflow" />
-
     </LinearLayout>
 
-
 </LinearLayout>
\ No newline at end of file
diff --git a/plugins/src/com/journeyOS/plugins/SelectorActivity.java b/plugins/src/com/journeyOS/plugins/SelectorActivity.java
index a32b8f6..222767e 100644
--- a/plugins/src/com/journeyOS/plugins/SelectorActivity.java
+++ b/plugins/src/com/journeyOS/plugins/SelectorActivity.java
@@ -20,6 +20,7 @@ import android.arch.lifecycle.Observer;
 import android.content.ActivityNotFoundException;
 import android.content.Context;
 import android.content.Intent;
+import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
@@ -116,7 +117,7 @@ public class SelectorActivity extends BaseActivity implements RouterListener {
 
 
     @Override
-    public int getContentViewId() {
+    public int attachLayoutRes() {
         return R.layout.activity_selector;
     }
 
@@ -132,8 +133,8 @@ public class SelectorActivity extends BaseActivity implements RouterListener {
     }
 
     @Override
-    protected void initDataObserver() {
-        super.initDataObserver();
+    protected void initDataObserver(Bundle savedInstanceState) {
+        super.initDataObserver(savedInstanceState);
         LogUtils.d(TAG, "data observer has been called!");
         mAppModel = ModelProvider.getModel(this, AppModel.class);
         mAppModel.getAllApps();
diff --git a/plugins/src/com/journeyOS/plugins/about/AboutFragment.java b/plugins/src/com/journeyOS/plugins/about/AboutFragment.java
new file mode 100644
index 0000000..769fbe0
--- /dev/null
+++ b/plugins/src/com/journeyOS/plugins/about/AboutFragment.java
@@ -0,0 +1,70 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.plugins.about;
+
+import android.app.Activity;
+import android.support.v4.app.Fragment;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.utils.BaseUtils;
+import com.journeyOS.base.widget.SettingView;
+import com.journeyOS.core.Version;
+import com.journeyOS.core.base.BaseFragment;
+import com.journeyOS.plugins.R;
+import com.journeyOS.plugins.R2;
+
+import butterknife.BindView;
+import butterknife.OnClick;
+
+public class AboutFragment extends BaseFragment {
+
+    @BindView(R2.id.version)
+    SettingView mVersion;
+    @BindView(R2.id.email)
+    SettingView mEmail;
+
+
+    static Activity mContext;
+
+    public static Fragment newInstance(Activity activity) {
+        AboutFragment fragment = new AboutFragment();
+        mContext = activity;
+        return fragment;
+    }
+
+    @Override
+    public int attachLayoutRes() {
+        return R.layout.fragment_about;
+    }
+
+    @Override
+    public void initViews() {
+        mVersion.setSummary(Version.getVersionName(mContext));
+        mEmail.setSummary(Constant.EMAIL);
+    }
+
+    @OnClick({R2.id.version})
+    void listenerVersion() {
+        BaseUtils.openInMarket(mContext);
+    }
+
+    @OnClick({R2.id.email})
+    void listenerEmail() {
+        BaseUtils.launchEmail(mContext, Constant.EMAIL);
+    }
+
+}
diff --git a/plugins/src/com/journeyOS/plugins/permission/PermissionFragment.java b/plugins/src/com/journeyOS/plugins/permission/PermissionFragment.java
new file mode 100644
index 0000000..600e5cb
--- /dev/null
+++ b/plugins/src/com/journeyOS/plugins/permission/PermissionFragment.java
@@ -0,0 +1,71 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.plugins.permission;
+
+import android.app.Activity;
+import android.support.v4.app.Fragment;
+import android.widget.Toast;
+
+import com.journeyOS.base.widget.SettingView;
+import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.base.BaseFragment;
+import com.journeyOS.core.permission.IPermission;
+import com.journeyOS.plugins.R;
+import com.journeyOS.plugins.R2;
+
+import butterknife.BindView;
+import butterknife.OnClick;
+import es.dmoral.toasty.Toasty;
+
+public class PermissionFragment extends BaseFragment {
+
+    @BindView(R2.id.overflow)
+    SettingView mOverflow;
+
+    static Activity mContext;
+
+    public static Fragment newInstance(Activity activity) {
+        PermissionFragment fragment = new PermissionFragment();
+        mContext = activity;
+        return fragment;
+    }
+
+    @Override
+    public int attachLayoutRes() {
+        return R.layout.fragment_permission;
+    }
+
+    @Override
+    public void initBeforeView() {
+        super.initBeforeView();
+    }
+
+    @Override
+    public void initViews() {
+
+    }
+
+    @OnClick({R2.id.overflow})
+    public void listenerOverflow() {
+        boolean hasPermission = CoreManager.getDefault().getImpl(IPermission.class).canDrawOverlays(mContext);
+        if (hasPermission) {
+            String message = mContext.getString(R.string.has_permission) + mContext.getString(R.string.overflow);
+            Toasty.success(mContext, message, Toast.LENGTH_SHORT).show();
+        }
+    }
+
+}
diff --git a/plugins/src/com/journeyOS/plugins/provider/PluginsImpl.java b/plugins/src/com/journeyOS/plugins/provider/PluginsImpl.java
index 31161fd..b97a7db 100644
--- a/plugins/src/com/journeyOS/plugins/provider/PluginsImpl.java
+++ b/plugins/src/com/journeyOS/plugins/provider/PluginsImpl.java
@@ -16,14 +16,20 @@
 
 package com.journeyOS.plugins.provider;
 
+import android.app.Activity;
 import android.content.Context;
+import android.support.v4.app.Fragment;
 
 import com.journeyOS.base.utils.AppUtils;
 import com.journeyOS.core.api.plugins.IPlugins;
 import com.journeyOS.core.type.EdgeDirection;
 import com.journeyOS.literouter.annotation.ARouterInject;
 import com.journeyOS.plugins.SelectorActivity;
+import com.journeyOS.plugins.about.AboutFragment;
+import com.journeyOS.plugins.permission.PermissionFragment;
 import com.journeyOS.plugins.search.SearchActivity;
+import com.journeyOS.plugins.settings.SettingsFragment;
+import com.journeyOS.plugins.user.LoginFragment;
 
 @ARouterInject(api = IPlugins.class)
 public class PluginsImpl implements IPlugins {
@@ -55,4 +61,24 @@ public class PluginsImpl implements IPlugins {
     public void navigationWeatherApp(Context context) {
         AppUtils.startApp(context, WEATHER_PKG);
     }
+
+    @Override
+    public Fragment provideSettingsFragment(Activity activity) {
+        return SettingsFragment.newInstance(activity);
+    }
+
+    @Override
+    public Fragment provideAboutFragment(Activity activity) {
+        return AboutFragment.newInstance(activity);
+    }
+
+    @Override
+    public Fragment providePermissionFragment(Activity activity) {
+        return PermissionFragment.newInstance(activity);
+    }
+
+    @Override
+    public Fragment provideLoginFragment(Activity activity) {
+        return LoginFragment.newInstance(activity);
+    }
 }
diff --git a/plugins/src/com/journeyOS/plugins/search/SearchActivity.java b/plugins/src/com/journeyOS/plugins/search/SearchActivity.java
index fc842eb..4ef0d7d 100644
--- a/plugins/src/com/journeyOS/plugins/search/SearchActivity.java
+++ b/plugins/src/com/journeyOS/plugins/search/SearchActivity.java
@@ -20,6 +20,7 @@ package com.journeyOS.plugins.search;
 import android.arch.lifecycle.Observer;
 import android.content.Context;
 import android.content.Intent;
+import android.os.Bundle;
 import android.support.annotation.Nullable;
 import android.support.v7.widget.LinearLayoutManager;
 import android.support.v7.widget.RecyclerView;
@@ -86,7 +87,7 @@ public class SearchActivity extends BaseActivity {
     }
 
     @Override
-    public int getContentViewId() {
+    public int attachLayoutRes() {
         return R.layout.activity_search;
     }
 
@@ -99,8 +100,8 @@ public class SearchActivity extends BaseActivity {
     }
 
     @Override
-    protected void initDataObserver() {
-        super.initDataObserver();
+    protected void initDataObserver(Bundle savedInstanceState) {
+        super.initDataObserver(savedInstanceState);
         mSearchModel = ModelProvider.getModel(this, SearchModel.class);
         mSearchModel.getAllCities();
         mSearchModel.getAllCityData().observe(this, new Observer<List<CityInfoData>>() {
diff --git a/plugins/src/com/journeyOS/plugins/settings/SettingsFragment.java b/plugins/src/com/journeyOS/plugins/settings/SettingsFragment.java
new file mode 100644
index 0000000..333ea77
--- /dev/null
+++ b/plugins/src/com/journeyOS/plugins/settings/SettingsFragment.java
@@ -0,0 +1,86 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.plugins.settings;
+
+import android.app.Activity;
+import android.support.v4.app.Fragment;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.persistence.SpUtils;
+import com.journeyOS.base.widget.SettingSwitch;
+import com.journeyOS.core.CoreManager;
+import com.journeyOS.core.api.edge.IEdge;
+import com.journeyOS.core.base.BaseFragment;
+import com.journeyOS.plugins.R;
+import com.journeyOS.plugins.R2;
+
+import butterknife.BindView;
+import butterknife.OnClick;
+
+public class SettingsFragment extends BaseFragment {
+
+    @BindView(R2.id.daemon)
+    SettingSwitch mDaemon;
+
+    @BindView(R2.id.ball)
+    SettingSwitch mBall;
+
+    static Activity mContext;
+
+    public static Fragment newInstance(Activity activity) {
+        SettingsFragment fragment = new SettingsFragment();
+        mContext = activity;
+        return fragment;
+    }
+
+    @Override
+    public int attachLayoutRes() {
+        return R.layout.fragment_settings;
+    }
+
+    @Override
+    public void initBeforeView() {
+        super.initBeforeView();
+    }
+
+    @Override
+    public void initViews() {
+        boolean daemon = SpUtils.getInstant().getBoolean(Constant.DAEMON, true);
+        mDaemon.setCheck(daemon);
+
+        boolean ball = SpUtils.getInstant().getBoolean(Constant.BALL, false);
+        mBall.setCheck(ball);
+        if (ball) {
+            CoreManager.getDefault().getImpl(IEdge.class).showingOrHidingBall(true);
+        }
+    }
+
+    @OnClick({R2.id.daemon})
+    public void listenerAutoStart() {
+        boolean daemon = SpUtils.getInstant().getBoolean(Constant.DAEMON, true);
+        mDaemon.setCheck(!daemon);
+        SpUtils.getInstant().put(Constant.DAEMON, !daemon);
+    }
+
+    @OnClick({R2.id.ball})
+    public void listenerBall() {
+        boolean ball = SpUtils.getInstant().getBoolean(Constant.BALL, false);
+        mBall.setCheck(!ball);
+        SpUtils.getInstant().put(Constant.BALL, !ball);
+        CoreManager.getDefault().getImpl(IEdge.class).showingOrHidingBall(!ball);
+    }
+}
diff --git a/plugins/src/com/journeyOS/plugins/user/LoginFragment.java b/plugins/src/com/journeyOS/plugins/user/LoginFragment.java
new file mode 100644
index 0000000..517e902
--- /dev/null
+++ b/plugins/src/com/journeyOS/plugins/user/LoginFragment.java
@@ -0,0 +1,282 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.plugins.user;
+
+import android.app.Activity;
+import android.arch.lifecycle.Observer;
+import android.os.Bundle;
+import android.support.v4.app.Fragment;
+import android.text.Editable;
+import android.view.View;
+import android.widget.RelativeLayout;
+
+import com.journeyOS.base.Constant;
+import com.journeyOS.base.persistence.SpUtils;
+import com.journeyOS.base.utils.BaseUtils;
+import com.journeyOS.base.utils.PhoneUtil;
+import com.journeyOS.base.widget.SettingSwitch;
+import com.journeyOS.base.widget.SettingText;
+import com.journeyOS.base.widget.SettingView;
+import com.journeyOS.base.widget.TimingButton;
+import com.journeyOS.core.AccountManager;
+import com.journeyOS.core.StatusDataResource;
+import com.journeyOS.core.SyncManager;
+import com.journeyOS.core.base.BaseFragment;
+import com.journeyOS.core.database.user.EdgeUser;
+import com.journeyOS.core.viewmodel.ModelProvider;
+import com.journeyOS.plugins.R;
+import com.journeyOS.plugins.R2;
+
+import butterknife.BindView;
+import butterknife.OnClick;
+import butterknife.OnTextChanged;
+import cn.bmob.v3.BmobSMS;
+import cn.bmob.v3.exception.BmobException;
+import cn.bmob.v3.listener.LogInListener;
+import cn.bmob.v3.listener.QueryListener;
+import cn.bmob.v3.listener.SaveListener;
+
+public class LoginFragment extends BaseFragment {
+    private static final String TAG = LoginFragment.class.getSimpleName();
+    static Activity mContext;
+
+    //login
+    @BindView(R2.id.user_info)
+    RelativeLayout mUserLayout;
+
+    @BindView(R2.id.auto_sync)
+    SettingSwitch mAutoSync;
+
+    @BindView(R2.id.user_id)
+    SettingText mUserIdView;
+
+    @BindView(R2.id.user_phone)
+    SettingText mPhoneView;
+
+    @BindView(R2.id.user_email)
+    SettingView mEmailView;
+
+    //login
+    @BindView(R2.id.login_view)
+    RelativeLayout mLoginLayout;
+
+    //register
+    @BindView(R2.id.register_view)
+    RelativeLayout mRegisterLayout;
+
+    @BindView(R2.id.smsButton)
+    TimingButton smsButton;
+
+
+    String mPhone = null;
+    String mPassword = null;
+    String mCode = null;
+
+    String mUser = null;
+    String mToken = null;
+
+    LoginModel mLoginModel;
+
+    final Observer<StatusDataResource> userInfoObserver = new Observer<StatusDataResource>() {
+        @Override
+        public void onChanged(StatusDataResource statusDataResource) {
+            handleUserInfoObserver(statusDataResource);
+        }
+    };
+
+    public static Fragment newInstance(Activity activity) {
+        LoginFragment fragment = new LoginFragment();
+        mContext = activity;
+        return fragment;
+    }
+
+    @Override
+    public int attachLayoutRes() {
+        return R.layout.fragment_login;
+    }
+
+    @Override
+    public void initViews() {
+        boolean isLogin = AccountManager.getDefault().isLogin();
+        if (isLogin) {
+            mUserLayout.setVisibility(View.VISIBLE);
+            mLoginLayout.setVisibility(View.GONE);
+            mRegisterLayout.setVisibility(View.GONE);
+
+            boolean daemon = SpUtils.getInstant().getBoolean(Constant.AUTO_SYNC, true);
+            mAutoSync.setCheck(daemon);
+
+        } else {
+            mUserLayout.setVisibility(View.GONE);
+            mRegisterLayout.setVisibility(View.GONE);
+            smsButton.setEnabled(false);
+        }
+    }
+
+    @Override
+    protected void initDataObserver(Bundle savedInstanceState) {
+        super.initDataObserver(savedInstanceState);
+        mLoginModel = ModelProvider.getModel(this, LoginModel.class);
+        mLoginModel.fetchUserInfo();
+
+        mLoginModel.getUserInfo().observe(this, userInfoObserver);
+    }
+
+    @OnClick(R2.id.fab_register)
+    public void startRegisterClick(View view) {
+        mUserLayout.setVisibility(View.GONE);
+        mLoginLayout.setVisibility(View.GONE);
+        mRegisterLayout.setVisibility(View.VISIBLE);
+    }
+
+    @OnTextChanged(value = R2.id.login_username, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)
+    void loginUserChanged(Editable s) {
+        mUser = s.toString();
+    }
+
+    @OnTextChanged(value = R2.id.login_password, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)
+    void loginPasswordChanged(Editable s) {
+        mToken = s.toString();
+    }
+
+    @OnClick(R2.id.login)
+    public void LoginClick(View view) {
+        if (!BaseUtils.isNull(mUser) && !BaseUtils.isNull(mToken)) {
+            EdgeUser.loginByAccount(mUser, mToken, new LogInListener<EdgeUser>() {
+                @Override
+                public void done(final EdgeUser edgeUser, BmobException e) {
+                    if (e == null) {
+                        mUserLayout.setVisibility(View.VISIBLE);
+                        mLoginLayout.setVisibility(View.GONE);
+                        mRegisterLayout.setVisibility(View.GONE);
+                        AccountManager.getDefault().save2Db(mUser, mToken);
+                        SyncManager.getDefault().fetchEdgeAir();
+                        mLoginModel.fetchUserInfo();
+                    }
+                }
+            });
+        }
+
+    }
+
+    @OnClick(R2.id.fab_close)
+    public void gotoLoginClick(View view) {
+        mUserLayout.setVisibility(View.GONE);
+        mLoginLayout.setVisibility(View.VISIBLE);
+        mRegisterLayout.setVisibility(View.GONE);
+    }
+
+    @OnClick(R2.id.smsButton)
+    public void smsButtonStart(View view) {
+        if (PhoneUtil.isMobile(mPhone)) {
+            BmobSMS.requestSMSCode(mPhone, "", new QueryListener<Integer>() {
+                @Override
+                public void done(Integer smsId, BmobException e) {
+                    if (BaseUtils.isNull(e)) {
+                        smsButton.start();
+                    }
+                }
+            });
+        }
+    }
+
+    @OnClick(R2.id.register)
+    public void registerClick(View view) {
+        if (PhoneUtil.isMobile(mPhone) && !BaseUtils.isNull(mPassword) && !BaseUtils.isNull(mCode)) {
+            EdgeUser user = new EdgeUser();
+            user.setMobilePhoneNumber(mPhone);
+            user.setPassword(mPassword);
+            user.signOrLogin(mCode, new SaveListener<EdgeUser>() {
+                @Override
+                public void done(final EdgeUser bmobUser, BmobException e) {
+                    if (e == null) {
+                        AccountManager.getDefault().save2Db(mUser, mToken);
+                        mUserLayout.setVisibility(View.VISIBLE);
+                        SyncManager.getDefault().fetchEdgeAir();
+                    }
+                }
+            });
+        }
+    }
+
+    @OnTextChanged(value = R2.id.register_username, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)
+    void registerPhoneChanged(Editable s) {
+        String phone = s.toString();
+        boolean isPhone = PhoneUtil.isMobile(phone);
+        if (isPhone) {
+            mPhone = phone;
+            smsButton.setEnabled(true);
+        } else {
+            smsButton.setEnabled(false);
+        }
+    }
+
+    @OnTextChanged(value = R2.id.register_password, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)
+    void registerPasswordChanged(Editable s) {
+        mPassword = s.toString();
+    }
+
+    @OnTextChanged(value = R2.id.register_code, callback = OnTextChanged.Callback.AFTER_TEXT_CHANGED)
+    void registerCodeChanged(Editable s) {
+        mCode = s.toString();
+    }
+
+    @OnClick({R2.id.auto_sync})
+    public void listenerAutoSync() {
+        boolean daemon = SpUtils.getInstant().getBoolean(Constant.AUTO_SYNC, true);
+        mAutoSync.setCheck(!daemon);
+        SpUtils.getInstant().put(Constant.AUTO_SYNC, !daemon);
+    }
+
+    void handleUserInfoObserver(final StatusDataResource statusDataResource) {
+        String notSet = mContext.getString(R.string.not_set);
+        switch (statusDataResource.status) {
+            case SUCCESS:
+                EdgeUser user = (EdgeUser) statusDataResource.data;
+
+                String username = user.getUsername();
+                if (!BaseUtils.isNull(username)) {
+                    mUserIdView.setRightText(username);
+                    mUserIdView.setEnabled(false);
+                } else {
+                    mUserIdView.setRightText(notSet);
+                }
+
+                String phone = user.getMobilePhoneNumber();
+                if (!BaseUtils.isNull(phone)) {
+                    mPhoneView.setRightText(phone);
+                    mPhoneView.setEnabled(false);
+                } else {
+                    mPhoneView.setRightText(notSet);
+                }
+
+                String email = user.getEmail();
+                if (!BaseUtils.isNull(email)) {
+                    mEmailView.setSummary(email);
+                    mEmailView.setEnabled(false);
+                } else {
+                    mEmailView.setSummary(notSet);
+                }
+
+                break;
+            case ERROR:
+
+                break;
+        }
+
+    }
+}
diff --git a/plugins/src/com/journeyOS/plugins/user/LoginModel.java b/plugins/src/com/journeyOS/plugins/user/LoginModel.java
new file mode 100644
index 0000000..f78d85f
--- /dev/null
+++ b/plugins/src/com/journeyOS/plugins/user/LoginModel.java
@@ -0,0 +1,58 @@
+/*
+ * Copyright (c) 2019 anqi.huang@outlook.com
+ *
+ * Licensed under the Apache License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ *
+ *     http://www.apache.org/licenses/LICENSE-2.0
+ *
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+
+package com.journeyOS.plugins.user;
+
+import android.arch.lifecycle.MutableLiveData;
+
+import com.journeyOS.base.utils.LogUtils;
+import com.journeyOS.core.StatusDataResource;
+import com.journeyOS.core.database.user.EdgeUser;
+import com.journeyOS.core.viewmodel.BaseViewModel;
+
+import cn.bmob.v3.BmobUser;
+import cn.bmob.v3.exception.BmobException;
+import cn.bmob.v3.listener.FetchUserInfoListener;
+
+public class LoginModel extends BaseViewModel {
+    static final String TAG = LoginModel.class.getSimpleName();
+
+    MutableLiveData<StatusDataResource> mUserInfo = new MutableLiveData<>();
+
+    protected MutableLiveData<StatusDataResource> getUserInfo() {
+        return mUserInfo;
+    }
+
+
+    @Override
+    protected void onCreate() {
+
+    }
+
+    public void fetchUserInfo() {
+        EdgeUser.fetchUserInfo(new FetchUserInfoListener<BmobUser>() {
+            @Override
+            public void done(BmobUser user, BmobException e) {
+                if (e == null) {
+                    EdgeUser edgeUser = BmobUser.getCurrentUser(EdgeUser.class);
+                    mUserInfo.postValue(StatusDataResource.success(edgeUser));
+                } else {
+                    LogUtils.e(TAG, "fetch user info error = " + e.getMessage());
+                }
+            }
+        });
+    }
+}
diff --git a/settings.gradle b/settings.gradle
index bb20303..414f6cd 100644
--- a/settings.gradle
+++ b/settings.gradle
@@ -13,8 +13,8 @@ def initVersion() {
     gradle.ext.targetVersion = 27
     gradle.ext.minSdkVersion = 26
     gradle.ext.supportVersion = '27.0.2'
-    gradle.ext.versionCode = 1
-    gradle.ext.versionName = '1.0.0'
+    gradle.ext.versionCode = 2
+    gradle.ext.versionName = '1.1.0'
 
     //base
     gradle.ext.materialprogressbar = '1.4.2'
@@ -24,6 +24,12 @@ def initVersion() {
     gradle.ext.circleimageview = '2.2.0'
     gradle.ext.retrofit2 = '2.3.0'
     gradle.ext.power_view = '1.0'
+    gradle.ext.bmob_sdk = '3.6.9'
+    gradle.ext.okio = '2.1.0'
+    gradle.ext.rxjava = '2.2.2'
+    gradle.ext.rxandroid = '2.1.0'
+    gradle.ext.slidingrootnav = '1.1.0'
+    gradle.ext.cardview = '25.1.1'
 
     //core dependencies
     gradle.ext.stetho = '1.5.0'
-- 
2.15.0

