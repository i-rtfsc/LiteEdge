apply plugin: 'com.android.library'


android {
    compileSdkVersion gradle.compileSdkVersion

    defaultConfig {
        minSdkVersion gradle.minSdkVersion
        targetSdkVersion gradle.targetVersion
        versionCode gradle.versionCode
        versionName gradle.versionName

        vectorDrawables.useSupportLibrary = true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            main.java.srcDirs = ['src']
            jniLibs.srcDirs = ['libs']
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api "com.journeyOS:litetask:$gradle.litetask"
    api "com.journeyOS:literouter:$gradle.literouter_core"
    api "com.android.support:appcompat-v7:$gradle.supportVersion"
    api "com.android.support:design:$gradle.supportVersion"
    api("com.jakewharton:butterknife:$gradle.butterknife")
    api "com.facebook.stetho:stetho:$gradle.stetho"
    api "com.tencent.bugly:crashreport_upgrade:$gradle.bugly_crashreport_upgrade"
    // ViewModel and LiveData
    api "android.arch.lifecycle:extensions:$gradle.lifecycle_extensions"
    // Room
    api "android.arch.persistence.room:runtime:$gradle.room_runtime"
    api "com.github.GrenderG:Toasty:$gradle.toasty"

    api "de.hdodenhof:circleimageview:$gradle.circleimageview"

    debugApi "com.squareup.leakcanary:leakcanary-android:$gradle.leakcanary"
    releaseApi "com.squareup.leakcanary:leakcanary-android-no-op:$gradle.leakcanary"

    // implementation library , can only be used in current module ,using JsonHelper
    implementation "com.google.code.gson:gson:$gradle.gson"

}
