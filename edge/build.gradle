apply plugin: 'com.android.application'
apply plugin: 'com.antfortune.freeline'

android {
    compileSdkVersion gradle.compileSdkVersion

    defaultConfig {
        applicationId "com.journeyOS.edge"
        minSdkVersion gradle.minSdkVersion
        targetSdkVersion gradle.targetVersion
        versionCode gradle.versionCode
        versionName gradle.versionName

        ndk {
            abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
        }

        vectorDrawables.useSupportLibrary = true
    }

    sourceSets {
        main {
            manifest.srcFile 'AndroidManifest.xml'
            res.srcDirs = ['res']
            assets.srcDirs = ['assets']
            main.java.srcDirs = ['src']
            aidl.srcDirs = ['aidl']
            assets.srcDirs = ['assets']
            jniLibs.srcDirs = ['libs']
        }
    }

    signingConfigs {
        release {
            File strFile = new File("../keystore/liteedge.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteedge'
            storePassword 'qazwsxedc'
        }
        debug {
            File strFile = new File("../keystore/liteedge.keystore")
            storeFile file(strFile)
            keyAlias 'journeyOS'
            keyPassword 'liteedge'
            storePassword 'qazwsxedc'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
        debug {
            minifyEnabled false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug
        }
    }

    applicationVariants.all { variant ->
        if (variant.buildType.name == 'release') {
            variant.outputs.all {
                outputFileName = new File("./../../../../../app_release/", "LiteEdge.apk")
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    implementation project(':core')
    implementation project(':plugins')

    annotationProcessor "com.journeyOS:literouter-compiler:$gradle.literouter_compiler"
    annotationProcessor "com.jakewharton:butterknife-compiler:$gradle.butterknife"
}

defaultTasks 'clean', 'assembleRelease'